(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/seedrandom/lib/alea.js
  var require_alea = __commonJS({
    "node_modules/seedrandom/lib/alea.js"(exports, module) {
      (function(global, module2, define2) {
        function Alea(seed) {
          var me = this, mash = Mash();
          me.next = function() {
            var t = 2091639 * me.s0 + me.c * 23283064365386963e-26;
            me.s0 = me.s1;
            me.s1 = me.s2;
            return me.s2 = t - (me.c = t | 0);
          };
          me.c = 1;
          me.s0 = mash(" ");
          me.s1 = mash(" ");
          me.s2 = mash(" ");
          me.s0 -= mash(seed);
          if (me.s0 < 0) {
            me.s0 += 1;
          }
          me.s1 -= mash(seed);
          if (me.s1 < 0) {
            me.s1 += 1;
          }
          me.s2 -= mash(seed);
          if (me.s2 < 0) {
            me.s2 += 1;
          }
          mash = null;
        }
        function copy(f, t) {
          t.c = f.c;
          t.s0 = f.s0;
          t.s1 = f.s1;
          t.s2 = f.s2;
          return t;
        }
        function impl(seed, opts) {
          var xg = new Alea(seed), state = opts && opts.state, prng = xg.next;
          prng.int32 = function() {
            return xg.next() * 4294967296 | 0;
          };
          prng.double = function() {
            return prng() + (prng() * 2097152 | 0) * 11102230246251565e-32;
          };
          prng.quick = prng;
          if (state) {
            if (typeof state == "object")
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        function Mash() {
          var n = 4022871197;
          var mash = function(data) {
            data = String(data);
            for (var i = 0; i < data.length; i++) {
              n += data.charCodeAt(i);
              var h = 0.02519603282416938 * n;
              n = h >>> 0;
              h -= n;
              h *= n;
              n = h >>> 0;
              h -= n;
              n += h * 4294967296;
            }
            return (n >>> 0) * 23283064365386963e-26;
          };
          return mash;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.alea = impl;
        }
      })(
        exports,
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // node_modules/seedrandom/lib/xor128.js
  var require_xor128 = __commonJS({
    "node_modules/seedrandom/lib/xor128.js"(exports, module) {
      (function(global, module2, define2) {
        function XorGen(seed) {
          var me = this, strseed = "";
          me.x = 0;
          me.y = 0;
          me.z = 0;
          me.w = 0;
          me.next = function() {
            var t = me.x ^ me.x << 11;
            me.x = me.y;
            me.y = me.z;
            me.z = me.w;
            return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;
          };
          if (seed === (seed | 0)) {
            me.x = seed;
          } else {
            strseed += seed;
          }
          for (var k = 0; k < strseed.length + 64; k++) {
            me.x ^= strseed.charCodeAt(k) | 0;
            me.next();
          }
        }
        function copy(f, t) {
          t.x = f.x;
          t.y = f.y;
          t.z = f.z;
          t.w = f.w;
          return t;
        }
        function impl(seed, opts) {
          var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
            return (xg.next() >>> 0) / 4294967296;
          };
          prng.double = function() {
            do {
              var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
            } while (result === 0);
            return result;
          };
          prng.int32 = xg.next;
          prng.quick = prng;
          if (state) {
            if (typeof state == "object")
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.xor128 = impl;
        }
      })(
        exports,
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // node_modules/seedrandom/lib/xorwow.js
  var require_xorwow = __commonJS({
    "node_modules/seedrandom/lib/xorwow.js"(exports, module) {
      (function(global, module2, define2) {
        function XorGen(seed) {
          var me = this, strseed = "";
          me.next = function() {
            var t = me.x ^ me.x >>> 2;
            me.x = me.y;
            me.y = me.z;
            me.z = me.w;
            me.w = me.v;
            return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;
          };
          me.x = 0;
          me.y = 0;
          me.z = 0;
          me.w = 0;
          me.v = 0;
          if (seed === (seed | 0)) {
            me.x = seed;
          } else {
            strseed += seed;
          }
          for (var k = 0; k < strseed.length + 64; k++) {
            me.x ^= strseed.charCodeAt(k) | 0;
            if (k == strseed.length) {
              me.d = me.x << 10 ^ me.x >>> 4;
            }
            me.next();
          }
        }
        function copy(f, t) {
          t.x = f.x;
          t.y = f.y;
          t.z = f.z;
          t.w = f.w;
          t.v = f.v;
          t.d = f.d;
          return t;
        }
        function impl(seed, opts) {
          var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
            return (xg.next() >>> 0) / 4294967296;
          };
          prng.double = function() {
            do {
              var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
            } while (result === 0);
            return result;
          };
          prng.int32 = xg.next;
          prng.quick = prng;
          if (state) {
            if (typeof state == "object")
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.xorwow = impl;
        }
      })(
        exports,
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // node_modules/seedrandom/lib/xorshift7.js
  var require_xorshift7 = __commonJS({
    "node_modules/seedrandom/lib/xorshift7.js"(exports, module) {
      (function(global, module2, define2) {
        function XorGen(seed) {
          var me = this;
          me.next = function() {
            var X = me.x, i = me.i, t, v, w;
            t = X[i];
            t ^= t >>> 7;
            v = t ^ t << 24;
            t = X[i + 1 & 7];
            v ^= t ^ t >>> 10;
            t = X[i + 3 & 7];
            v ^= t ^ t >>> 3;
            t = X[i + 4 & 7];
            v ^= t ^ t << 7;
            t = X[i + 7 & 7];
            t = t ^ t << 13;
            v ^= t ^ t << 9;
            X[i] = v;
            me.i = i + 1 & 7;
            return v;
          };
          function init(me2, seed2) {
            var j, w, X = [];
            if (seed2 === (seed2 | 0)) {
              w = X[0] = seed2;
            } else {
              seed2 = "" + seed2;
              for (j = 0; j < seed2.length; ++j) {
                X[j & 7] = X[j & 7] << 15 ^ seed2.charCodeAt(j) + X[j + 1 & 7] << 13;
              }
            }
            while (X.length < 8)
              X.push(0);
            for (j = 0; j < 8 && X[j] === 0; ++j)
              ;
            if (j == 8)
              w = X[7] = -1;
            else
              w = X[j];
            me2.x = X;
            me2.i = 0;
            for (j = 256; j > 0; --j) {
              me2.next();
            }
          }
          init(me, seed);
        }
        function copy(f, t) {
          t.x = f.x.slice();
          t.i = f.i;
          return t;
        }
        function impl(seed, opts) {
          if (seed == null)
            seed = +/* @__PURE__ */ new Date();
          var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
            return (xg.next() >>> 0) / 4294967296;
          };
          prng.double = function() {
            do {
              var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
            } while (result === 0);
            return result;
          };
          prng.int32 = xg.next;
          prng.quick = prng;
          if (state) {
            if (state.x)
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.xorshift7 = impl;
        }
      })(
        exports,
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // node_modules/seedrandom/lib/xor4096.js
  var require_xor4096 = __commonJS({
    "node_modules/seedrandom/lib/xor4096.js"(exports, module) {
      (function(global, module2, define2) {
        function XorGen(seed) {
          var me = this;
          me.next = function() {
            var w = me.w, X = me.X, i = me.i, t, v;
            me.w = w = w + 1640531527 | 0;
            v = X[i + 34 & 127];
            t = X[i = i + 1 & 127];
            v ^= v << 13;
            t ^= t << 17;
            v ^= v >>> 15;
            t ^= t >>> 12;
            v = X[i] = v ^ t;
            me.i = i;
            return v + (w ^ w >>> 16) | 0;
          };
          function init(me2, seed2) {
            var t, v, i, j, w, X = [], limit = 128;
            if (seed2 === (seed2 | 0)) {
              v = seed2;
              seed2 = null;
            } else {
              seed2 = seed2 + "\0";
              v = 0;
              limit = Math.max(limit, seed2.length);
            }
            for (i = 0, j = -32; j < limit; ++j) {
              if (seed2)
                v ^= seed2.charCodeAt((j + 32) % seed2.length);
              if (j === 0)
                w = v;
              v ^= v << 10;
              v ^= v >>> 15;
              v ^= v << 4;
              v ^= v >>> 13;
              if (j >= 0) {
                w = w + 1640531527 | 0;
                t = X[j & 127] ^= v + w;
                i = 0 == t ? i + 1 : 0;
              }
            }
            if (i >= 128) {
              X[(seed2 && seed2.length || 0) & 127] = -1;
            }
            i = 127;
            for (j = 4 * 128; j > 0; --j) {
              v = X[i + 34 & 127];
              t = X[i = i + 1 & 127];
              v ^= v << 13;
              t ^= t << 17;
              v ^= v >>> 15;
              t ^= t >>> 12;
              X[i] = v ^ t;
            }
            me2.w = w;
            me2.X = X;
            me2.i = i;
          }
          init(me, seed);
        }
        function copy(f, t) {
          t.i = f.i;
          t.w = f.w;
          t.X = f.X.slice();
          return t;
        }
        ;
        function impl(seed, opts) {
          if (seed == null)
            seed = +/* @__PURE__ */ new Date();
          var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
            return (xg.next() >>> 0) / 4294967296;
          };
          prng.double = function() {
            do {
              var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
            } while (result === 0);
            return result;
          };
          prng.int32 = xg.next;
          prng.quick = prng;
          if (state) {
            if (state.X)
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.xor4096 = impl;
        }
      })(
        exports,
        // window object or global
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // node_modules/seedrandom/lib/tychei.js
  var require_tychei = __commonJS({
    "node_modules/seedrandom/lib/tychei.js"(exports, module) {
      (function(global, module2, define2) {
        function XorGen(seed) {
          var me = this, strseed = "";
          me.next = function() {
            var b = me.b, c = me.c, d = me.d, a = me.a;
            b = b << 25 ^ b >>> 7 ^ c;
            c = c - d | 0;
            d = d << 24 ^ d >>> 8 ^ a;
            a = a - b | 0;
            me.b = b = b << 20 ^ b >>> 12 ^ c;
            me.c = c = c - d | 0;
            me.d = d << 16 ^ c >>> 16 ^ a;
            return me.a = a - b | 0;
          };
          me.a = 0;
          me.b = 0;
          me.c = 2654435769 | 0;
          me.d = 1367130551;
          if (seed === Math.floor(seed)) {
            me.a = seed / 4294967296 | 0;
            me.b = seed | 0;
          } else {
            strseed += seed;
          }
          for (var k = 0; k < strseed.length + 20; k++) {
            me.b ^= strseed.charCodeAt(k) | 0;
            me.next();
          }
        }
        function copy(f, t) {
          t.a = f.a;
          t.b = f.b;
          t.c = f.c;
          t.d = f.d;
          return t;
        }
        ;
        function impl(seed, opts) {
          var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
            return (xg.next() >>> 0) / 4294967296;
          };
          prng.double = function() {
            do {
              var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
            } while (result === 0);
            return result;
          };
          prng.int32 = xg.next;
          prng.quick = prng;
          if (state) {
            if (typeof state == "object")
              copy(state, xg);
            prng.state = function() {
              return copy(xg, {});
            };
          }
          return prng;
        }
        if (module2 && module2.exports) {
          module2.exports = impl;
        } else if (define2 && define2.amd) {
          define2(function() {
            return impl;
          });
        } else {
          this.tychei = impl;
        }
      })(
        exports,
        typeof module == "object" && module,
        // present in node.js
        typeof define == "function" && define
        // present with an AMD loader
      );
    }
  });

  // (disabled):crypto
  var require_crypto = __commonJS({
    "(disabled):crypto"() {
    }
  });

  // node_modules/seedrandom/seedrandom.js
  var require_seedrandom = __commonJS({
    "node_modules/seedrandom/seedrandom.js"(exports, module) {
      (function(global, pool, math) {
        var width = 256, chunks = 6, digits = 52, rngname = "random", startdenom = math.pow(width, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask = width - 1, nodecrypto;
        function seedrandom2(seed, options, callback) {
          var key = [];
          options = options == true ? { entropy: true } : options || {};
          var shortseed = mixkey(flatten(
            options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed,
            3
          ), key);
          var arc4 = new ARC4(key);
          var prng = function() {
            var n = arc4.g(chunks), d = startdenom, x = 0;
            while (n < significance) {
              n = (n + x) * width;
              d *= width;
              x = arc4.g(1);
            }
            while (n >= overflow) {
              n /= 2;
              d /= 2;
              x >>>= 1;
            }
            return (n + x) / d;
          };
          prng.int32 = function() {
            return arc4.g(4) | 0;
          };
          prng.quick = function() {
            return arc4.g(4) / 4294967296;
          };
          prng.double = prng;
          mixkey(tostring(arc4.S), pool);
          return (options.pass || callback || function(prng2, seed2, is_math_call, state) {
            if (state) {
              if (state.S) {
                copy(state, arc4);
              }
              prng2.state = function() {
                return copy(arc4, {});
              };
            }
            if (is_math_call) {
              math[rngname] = prng2;
              return seed2;
            } else
              return prng2;
          })(
            prng,
            shortseed,
            "global" in options ? options.global : this == math,
            options.state
          );
        }
        function ARC4(key) {
          var t, keylen = key.length, me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];
          if (!keylen) {
            key = [keylen++];
          }
          while (i < width) {
            s[i] = i++;
          }
          for (i = 0; i < width; i++) {
            s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];
            s[j] = t;
          }
          (me.g = function(count) {
            var t2, r = 0, i2 = me.i, j2 = me.j, s2 = me.S;
            while (count--) {
              t2 = s2[i2 = mask & i2 + 1];
              r = r * width + s2[mask & (s2[i2] = s2[j2 = mask & j2 + t2]) + (s2[j2] = t2)];
            }
            me.i = i2;
            me.j = j2;
            return r;
          })(width);
        }
        function copy(f, t) {
          t.i = f.i;
          t.j = f.j;
          t.S = f.S.slice();
          return t;
        }
        ;
        function flatten(obj, depth) {
          var result = [], typ = typeof obj, prop;
          if (depth && typ == "object") {
            for (prop in obj) {
              try {
                result.push(flatten(obj[prop], depth - 1));
              } catch (e) {
              }
            }
          }
          return result.length ? result : typ == "string" ? obj : obj + "\0";
        }
        function mixkey(seed, key) {
          var stringseed = seed + "", smear, j = 0;
          while (j < stringseed.length) {
            key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
          }
          return tostring(key);
        }
        function autoseed() {
          try {
            var out;
            if (nodecrypto && (out = nodecrypto.randomBytes)) {
              out = out(width);
            } else {
              out = new Uint8Array(width);
              (global.crypto || global.msCrypto).getRandomValues(out);
            }
            return tostring(out);
          } catch (e) {
            var browser = global.navigator, plugins = browser && browser.plugins;
            return [+/* @__PURE__ */ new Date(), global, plugins, global.screen, tostring(pool)];
          }
        }
        function tostring(a) {
          return String.fromCharCode.apply(0, a);
        }
        mixkey(math.random(), pool);
        if (typeof module == "object" && module.exports) {
          module.exports = seedrandom2;
          try {
            nodecrypto = require_crypto();
          } catch (ex) {
          }
        } else if (typeof define == "function" && define.amd) {
          define(function() {
            return seedrandom2;
          });
        } else {
          math["seed" + rngname] = seedrandom2;
        }
      })(
        // global: `self` in browsers (including strict mode and web workers),
        // otherwise `this` in Node and other environments
        typeof self !== "undefined" ? self : exports,
        [],
        // pool: entropy pool starts empty
        Math
        // math: package containing random, pow, and seedrandom
      );
    }
  });

  // node_modules/seedrandom/index.js
  var require_seedrandom2 = __commonJS({
    "node_modules/seedrandom/index.js"(exports, module) {
      var alea = require_alea();
      var xor128 = require_xor128();
      var xorwow = require_xorwow();
      var xorshift7 = require_xorshift7();
      var xor4096 = require_xor4096();
      var tychei = require_tychei();
      var sr = require_seedrandom();
      sr.alea = alea;
      sr.xor128 = xor128;
      sr.xorwow = xorwow;
      sr.xorshift7 = xorshift7;
      sr.xor4096 = xor4096;
      sr.tychei = tychei;
      module.exports = sr;
    }
  });

  // node_modules/random-words/index.js
  var import_seedrandom = __toESM(require_seedrandom2(), 1);
  var wordList = [
    "ability",
    "able",
    "aboard",
    "about",
    "above",
    "accept",
    "accident",
    "according",
    "account",
    "accurate",
    "acres",
    "across",
    "act",
    "action",
    "active",
    "activity",
    "actual",
    "actually",
    "add",
    "addition",
    "additional",
    "adjective",
    "adult",
    "adventure",
    "advice",
    "affect",
    "afraid",
    "after",
    "afternoon",
    "again",
    "against",
    "age",
    "ago",
    "agree",
    "ahead",
    "aid",
    "air",
    "airplane",
    "alike",
    "alive",
    "all",
    "allow",
    "almost",
    "alone",
    "along",
    "aloud",
    "alphabet",
    "already",
    "also",
    "although",
    "am",
    "among",
    "amount",
    "ancient",
    "angle",
    "angry",
    "animal",
    "announced",
    "another",
    "answer",
    "ants",
    "any",
    "anybody",
    "anyone",
    "anything",
    "anyway",
    "anywhere",
    "apart",
    "apartment",
    "appearance",
    "apple",
    "applied",
    "appropriate",
    "are",
    "area",
    "arm",
    "army",
    "around",
    "arrange",
    "arrangement",
    "arrive",
    "arrow",
    "art",
    "article",
    "as",
    "aside",
    "ask",
    "asleep",
    "at",
    "ate",
    "atmosphere",
    "atom",
    "atomic",
    "attached",
    "attack",
    "attempt",
    "attention",
    "audience",
    "author",
    "automobile",
    "available",
    "average",
    "avoid",
    "aware",
    "away",
    "baby",
    "back",
    "bad",
    "badly",
    "bag",
    "balance",
    "ball",
    "balloon",
    "band",
    "bank",
    "bar",
    "bare",
    "bark",
    "barn",
    "base",
    "baseball",
    "basic",
    "basis",
    "basket",
    "bat",
    "battle",
    "be",
    "bean",
    "bear",
    "beat",
    "beautiful",
    "beauty",
    "became",
    "because",
    "become",
    "becoming",
    "bee",
    "been",
    "before",
    "began",
    "beginning",
    "begun",
    "behavior",
    "behind",
    "being",
    "believed",
    "bell",
    "belong",
    "below",
    "belt",
    "bend",
    "beneath",
    "bent",
    "beside",
    "best",
    "bet",
    "better",
    "between",
    "beyond",
    "bicycle",
    "bigger",
    "biggest",
    "bill",
    "birds",
    "birth",
    "birthday",
    "bit",
    "bite",
    "black",
    "blank",
    "blanket",
    "blew",
    "blind",
    "block",
    "blood",
    "blow",
    "blue",
    "board",
    "boat",
    "body",
    "bone",
    "book",
    "border",
    "born",
    "both",
    "bottle",
    "bottom",
    "bound",
    "bow",
    "bowl",
    "box",
    "boy",
    "brain",
    "branch",
    "brass",
    "brave",
    "bread",
    "break",
    "breakfast",
    "breath",
    "breathe",
    "breathing",
    "breeze",
    "brick",
    "bridge",
    "brief",
    "bright",
    "bring",
    "broad",
    "broke",
    "broken",
    "brother",
    "brought",
    "brown",
    "brush",
    "buffalo",
    "build",
    "building",
    "built",
    "buried",
    "burn",
    "burst",
    "bus",
    "bush",
    "business",
    "busy",
    "but",
    "butter",
    "buy",
    "by",
    "cabin",
    "cage",
    "cake",
    "call",
    "calm",
    "came",
    "camera",
    "camp",
    "can",
    "canal",
    "cannot",
    "cap",
    "capital",
    "captain",
    "captured",
    "car",
    "carbon",
    "card",
    "care",
    "careful",
    "carefully",
    "carried",
    "carry",
    "case",
    "cast",
    "castle",
    "cat",
    "catch",
    "cattle",
    "caught",
    "cause",
    "cave",
    "cell",
    "cent",
    "center",
    "central",
    "century",
    "certain",
    "certainly",
    "chain",
    "chair",
    "chamber",
    "chance",
    "change",
    "changing",
    "chapter",
    "character",
    "characteristic",
    "charge",
    "chart",
    "check",
    "cheese",
    "chemical",
    "chest",
    "chicken",
    "chief",
    "child",
    "children",
    "choice",
    "choose",
    "chose",
    "chosen",
    "church",
    "circle",
    "circus",
    "citizen",
    "city",
    "class",
    "classroom",
    "claws",
    "clay",
    "clean",
    "clear",
    "clearly",
    "climate",
    "climb",
    "clock",
    "close",
    "closely",
    "closer",
    "cloth",
    "clothes",
    "clothing",
    "cloud",
    "club",
    "coach",
    "coal",
    "coast",
    "coat",
    "coffee",
    "cold",
    "collect",
    "college",
    "colony",
    "color",
    "column",
    "combination",
    "combine",
    "come",
    "comfortable",
    "coming",
    "command",
    "common",
    "community",
    "company",
    "compare",
    "compass",
    "complete",
    "completely",
    "complex",
    "composed",
    "composition",
    "compound",
    "concerned",
    "condition",
    "congress",
    "connected",
    "consider",
    "consist",
    "consonant",
    "constantly",
    "construction",
    "contain",
    "continent",
    "continued",
    "contrast",
    "control",
    "conversation",
    "cook",
    "cookies",
    "cool",
    "copper",
    "copy",
    "corn",
    "corner",
    "correct",
    "correctly",
    "cost",
    "cotton",
    "could",
    "count",
    "country",
    "couple",
    "courage",
    "course",
    "court",
    "cover",
    "cow",
    "cowboy",
    "crack",
    "cream",
    "create",
    "creature",
    "crew",
    "crop",
    "cross",
    "crowd",
    "cry",
    "cup",
    "curious",
    "current",
    "curve",
    "customs",
    "cut",
    "cutting",
    "daily",
    "damage",
    "dance",
    "danger",
    "dangerous",
    "dark",
    "darkness",
    "date",
    "daughter",
    "dawn",
    "day",
    "dead",
    "deal",
    "dear",
    "death",
    "decide",
    "declared",
    "deep",
    "deeply",
    "deer",
    "definition",
    "degree",
    "depend",
    "depth",
    "describe",
    "desert",
    "design",
    "desk",
    "detail",
    "determine",
    "develop",
    "development",
    "diagram",
    "diameter",
    "did",
    "die",
    "differ",
    "difference",
    "different",
    "difficult",
    "difficulty",
    "dig",
    "dinner",
    "direct",
    "direction",
    "directly",
    "dirt",
    "dirty",
    "disappear",
    "discover",
    "discovery",
    "discuss",
    "discussion",
    "disease",
    "dish",
    "distance",
    "distant",
    "divide",
    "division",
    "do",
    "doctor",
    "does",
    "dog",
    "doing",
    "doll",
    "dollar",
    "done",
    "donkey",
    "door",
    "dot",
    "double",
    "doubt",
    "down",
    "dozen",
    "draw",
    "drawn",
    "dream",
    "dress",
    "drew",
    "dried",
    "drink",
    "drive",
    "driven",
    "driver",
    "driving",
    "drop",
    "dropped",
    "drove",
    "dry",
    "duck",
    "due",
    "dug",
    "dull",
    "during",
    "dust",
    "duty",
    "each",
    "eager",
    "ear",
    "earlier",
    "early",
    "earn",
    "earth",
    "easier",
    "easily",
    "east",
    "easy",
    "eat",
    "eaten",
    "edge",
    "education",
    "effect",
    "effort",
    "egg",
    "eight",
    "either",
    "electric",
    "electricity",
    "element",
    "elephant",
    "eleven",
    "else",
    "empty",
    "end",
    "enemy",
    "energy",
    "engine",
    "engineer",
    "enjoy",
    "enough",
    "enter",
    "entire",
    "entirely",
    "environment",
    "equal",
    "equally",
    "equator",
    "equipment",
    "escape",
    "especially",
    "essential",
    "establish",
    "even",
    "evening",
    "event",
    "eventually",
    "ever",
    "every",
    "everybody",
    "everyone",
    "everything",
    "everywhere",
    "evidence",
    "exact",
    "exactly",
    "examine",
    "example",
    "excellent",
    "except",
    "exchange",
    "excited",
    "excitement",
    "exciting",
    "exclaimed",
    "exercise",
    "exist",
    "expect",
    "experience",
    "experiment",
    "explain",
    "explanation",
    "explore",
    "express",
    "expression",
    "extra",
    "eye",
    "face",
    "facing",
    "fact",
    "factor",
    "factory",
    "failed",
    "fair",
    "fairly",
    "fall",
    "fallen",
    "familiar",
    "family",
    "famous",
    "far",
    "farm",
    "farmer",
    "farther",
    "fast",
    "fastened",
    "faster",
    "fat",
    "father",
    "favorite",
    "fear",
    "feathers",
    "feature",
    "fed",
    "feed",
    "feel",
    "feet",
    "fell",
    "fellow",
    "felt",
    "fence",
    "few",
    "fewer",
    "field",
    "fierce",
    "fifteen",
    "fifth",
    "fifty",
    "fight",
    "fighting",
    "figure",
    "fill",
    "film",
    "final",
    "finally",
    "find",
    "fine",
    "finest",
    "finger",
    "finish",
    "fire",
    "fireplace",
    "firm",
    "first",
    "fish",
    "five",
    "fix",
    "flag",
    "flame",
    "flat",
    "flew",
    "flies",
    "flight",
    "floating",
    "floor",
    "flow",
    "flower",
    "fly",
    "fog",
    "folks",
    "follow",
    "food",
    "foot",
    "football",
    "for",
    "force",
    "foreign",
    "forest",
    "forget",
    "forgot",
    "forgotten",
    "form",
    "former",
    "fort",
    "forth",
    "forty",
    "forward",
    "fought",
    "found",
    "four",
    "fourth",
    "fox",
    "frame",
    "free",
    "freedom",
    "frequently",
    "fresh",
    "friend",
    "friendly",
    "frighten",
    "frog",
    "from",
    "front",
    "frozen",
    "fruit",
    "fuel",
    "full",
    "fully",
    "fun",
    "function",
    "funny",
    "fur",
    "furniture",
    "further",
    "future",
    "gain",
    "game",
    "garage",
    "garden",
    "gas",
    "gasoline",
    "gate",
    "gather",
    "gave",
    "general",
    "generally",
    "gentle",
    "gently",
    "get",
    "getting",
    "giant",
    "gift",
    "girl",
    "give",
    "given",
    "giving",
    "glad",
    "glass",
    "globe",
    "go",
    "goes",
    "gold",
    "golden",
    "gone",
    "good",
    "goose",
    "got",
    "government",
    "grabbed",
    "grade",
    "gradually",
    "grain",
    "grandfather",
    "grandmother",
    "graph",
    "grass",
    "gravity",
    "gray",
    "great",
    "greater",
    "greatest",
    "greatly",
    "green",
    "grew",
    "ground",
    "group",
    "grow",
    "grown",
    "growth",
    "guard",
    "guess",
    "guide",
    "gulf",
    "gun",
    "habit",
    "had",
    "hair",
    "half",
    "halfway",
    "hall",
    "hand",
    "handle",
    "handsome",
    "hang",
    "happen",
    "happened",
    "happily",
    "happy",
    "harbor",
    "hard",
    "harder",
    "hardly",
    "has",
    "hat",
    "have",
    "having",
    "hay",
    "he",
    "headed",
    "heading",
    "health",
    "heard",
    "hearing",
    "heart",
    "heat",
    "heavy",
    "height",
    "held",
    "hello",
    "help",
    "helpful",
    "her",
    "herd",
    "here",
    "herself",
    "hidden",
    "hide",
    "high",
    "higher",
    "highest",
    "highway",
    "hill",
    "him",
    "himself",
    "his",
    "history",
    "hit",
    "hold",
    "hole",
    "hollow",
    "home",
    "honor",
    "hope",
    "horn",
    "horse",
    "hospital",
    "hot",
    "hour",
    "house",
    "how",
    "however",
    "huge",
    "human",
    "hundred",
    "hung",
    "hungry",
    "hunt",
    "hunter",
    "hurried",
    "hurry",
    "hurt",
    "husband",
    "ice",
    "idea",
    "identity",
    "if",
    "ill",
    "image",
    "imagine",
    "immediately",
    "importance",
    "important",
    "impossible",
    "improve",
    "in",
    "inch",
    "include",
    "including",
    "income",
    "increase",
    "indeed",
    "independent",
    "indicate",
    "individual",
    "industrial",
    "industry",
    "influence",
    "information",
    "inside",
    "instance",
    "instant",
    "instead",
    "instrument",
    "interest",
    "interior",
    "into",
    "introduced",
    "invented",
    "involved",
    "iron",
    "is",
    "island",
    "it",
    "its",
    "itself",
    "jack",
    "jar",
    "jet",
    "job",
    "join",
    "joined",
    "journey",
    "joy",
    "judge",
    "jump",
    "jungle",
    "just",
    "keep",
    "kept",
    "key",
    "kids",
    "kill",
    "kind",
    "kitchen",
    "knew",
    "knife",
    "know",
    "knowledge",
    "known",
    "label",
    "labor",
    "lack",
    "lady",
    "laid",
    "lake",
    "lamp",
    "land",
    "language",
    "large",
    "larger",
    "largest",
    "last",
    "late",
    "later",
    "laugh",
    "law",
    "lay",
    "layers",
    "lead",
    "leader",
    "leaf",
    "learn",
    "least",
    "leather",
    "leave",
    "leaving",
    "led",
    "left",
    "leg",
    "length",
    "lesson",
    "let",
    "letter",
    "level",
    "library",
    "lie",
    "life",
    "lift",
    "light",
    "like",
    "likely",
    "limited",
    "line",
    "lion",
    "lips",
    "liquid",
    "list",
    "listen",
    "little",
    "live",
    "living",
    "load",
    "local",
    "locate",
    "location",
    "log",
    "lonely",
    "long",
    "longer",
    "look",
    "loose",
    "lose",
    "loss",
    "lost",
    "lot",
    "loud",
    "love",
    "lovely",
    "low",
    "lower",
    "luck",
    "lucky",
    "lunch",
    "lungs",
    "lying",
    "machine",
    "machinery",
    "mad",
    "made",
    "magic",
    "magnet",
    "mail",
    "main",
    "mainly",
    "major",
    "make",
    "making",
    "man",
    "managed",
    "manner",
    "manufacturing",
    "many",
    "map",
    "mark",
    "market",
    "married",
    "mass",
    "massage",
    "master",
    "material",
    "mathematics",
    "matter",
    "may",
    "maybe",
    "me",
    "meal",
    "mean",
    "means",
    "meant",
    "measure",
    "meat",
    "medicine",
    "meet",
    "melted",
    "member",
    "memory",
    "men",
    "mental",
    "merely",
    "met",
    "metal",
    "method",
    "mice",
    "middle",
    "might",
    "mighty",
    "mile",
    "military",
    "milk",
    "mill",
    "mind",
    "mine",
    "minerals",
    "minute",
    "mirror",
    "missing",
    "mission",
    "mistake",
    "mix",
    "mixture",
    "model",
    "modern",
    "molecular",
    "moment",
    "money",
    "monkey",
    "month",
    "mood",
    "moon",
    "more",
    "morning",
    "most",
    "mostly",
    "mother",
    "motion",
    "motor",
    "mountain",
    "mouse",
    "mouth",
    "move",
    "movement",
    "movie",
    "moving",
    "mud",
    "muscle",
    "music",
    "musical",
    "must",
    "my",
    "myself",
    "mysterious",
    "nails",
    "name",
    "nation",
    "national",
    "native",
    "natural",
    "naturally",
    "nature",
    "near",
    "nearby",
    "nearer",
    "nearest",
    "nearly",
    "necessary",
    "neck",
    "needed",
    "needle",
    "needs",
    "negative",
    "neighbor",
    "neighborhood",
    "nervous",
    "nest",
    "never",
    "new",
    "news",
    "newspaper",
    "next",
    "nice",
    "night",
    "nine",
    "no",
    "nobody",
    "nodded",
    "noise",
    "none",
    "noon",
    "nor",
    "north",
    "nose",
    "not",
    "note",
    "noted",
    "nothing",
    "notice",
    "noun",
    "now",
    "number",
    "numeral",
    "nuts",
    "object",
    "observe",
    "obtain",
    "occasionally",
    "occur",
    "ocean",
    "of",
    "off",
    "offer",
    "office",
    "officer",
    "official",
    "oil",
    "old",
    "older",
    "oldest",
    "on",
    "once",
    "one",
    "only",
    "onto",
    "open",
    "operation",
    "opinion",
    "opportunity",
    "opposite",
    "or",
    "orange",
    "orbit",
    "order",
    "ordinary",
    "organization",
    "organized",
    "origin",
    "original",
    "other",
    "ought",
    "our",
    "ourselves",
    "out",
    "outer",
    "outline",
    "outside",
    "over",
    "own",
    "owner",
    "oxygen",
    "pack",
    "package",
    "page",
    "paid",
    "pain",
    "paint",
    "pair",
    "palace",
    "pale",
    "pan",
    "paper",
    "paragraph",
    "parallel",
    "parent",
    "park",
    "part",
    "particles",
    "particular",
    "particularly",
    "partly",
    "parts",
    "party",
    "pass",
    "passage",
    "past",
    "path",
    "pattern",
    "pay",
    "peace",
    "pen",
    "pencil",
    "people",
    "per",
    "percent",
    "perfect",
    "perfectly",
    "perhaps",
    "period",
    "person",
    "personal",
    "pet",
    "phrase",
    "physical",
    "piano",
    "pick",
    "picture",
    "pictured",
    "pie",
    "piece",
    "pig",
    "pile",
    "pilot",
    "pine",
    "pink",
    "pipe",
    "pitch",
    "place",
    "plain",
    "plan",
    "plane",
    "planet",
    "planned",
    "planning",
    "plant",
    "plastic",
    "plate",
    "plates",
    "play",
    "pleasant",
    "please",
    "pleasure",
    "plenty",
    "plural",
    "plus",
    "pocket",
    "poem",
    "poet",
    "poetry",
    "point",
    "pole",
    "police",
    "policeman",
    "political",
    "pond",
    "pony",
    "pool",
    "poor",
    "popular",
    "population",
    "porch",
    "port",
    "position",
    "positive",
    "possible",
    "possibly",
    "post",
    "pot",
    "potatoes",
    "pound",
    "pour",
    "powder",
    "power",
    "powerful",
    "practical",
    "practice",
    "prepare",
    "present",
    "president",
    "press",
    "pressure",
    "pretty",
    "prevent",
    "previous",
    "price",
    "pride",
    "primitive",
    "principal",
    "principle",
    "printed",
    "private",
    "prize",
    "probably",
    "problem",
    "process",
    "produce",
    "product",
    "production",
    "program",
    "progress",
    "promised",
    "proper",
    "properly",
    "property",
    "protection",
    "proud",
    "prove",
    "provide",
    "public",
    "pull",
    "pupil",
    "pure",
    "purple",
    "purpose",
    "push",
    "put",
    "putting",
    "quarter",
    "queen",
    "question",
    "quick",
    "quickly",
    "quiet",
    "quietly",
    "quite",
    "rabbit",
    "race",
    "radio",
    "railroad",
    "rain",
    "raise",
    "ran",
    "ranch",
    "range",
    "rapidly",
    "rate",
    "rather",
    "raw",
    "rays",
    "reach",
    "read",
    "reader",
    "ready",
    "real",
    "realize",
    "rear",
    "reason",
    "recall",
    "receive",
    "recent",
    "recently",
    "recognize",
    "record",
    "red",
    "refer",
    "refused",
    "region",
    "regular",
    "related",
    "relationship",
    "religious",
    "remain",
    "remarkable",
    "remember",
    "remove",
    "repeat",
    "replace",
    "replied",
    "report",
    "represent",
    "require",
    "research",
    "respect",
    "rest",
    "result",
    "return",
    "review",
    "rhyme",
    "rhythm",
    "rice",
    "rich",
    "ride",
    "riding",
    "right",
    "ring",
    "rise",
    "rising",
    "river",
    "road",
    "roar",
    "rock",
    "rocket",
    "rocky",
    "rod",
    "roll",
    "roof",
    "room",
    "root",
    "rope",
    "rose",
    "rough",
    "round",
    "route",
    "row",
    "rubbed",
    "rubber",
    "rule",
    "ruler",
    "run",
    "running",
    "rush",
    "sad",
    "saddle",
    "safe",
    "safety",
    "said",
    "sail",
    "sale",
    "salmon",
    "salt",
    "same",
    "sand",
    "sang",
    "sat",
    "satellites",
    "satisfied",
    "save",
    "saved",
    "saw",
    "say",
    "scale",
    "scared",
    "scene",
    "school",
    "science",
    "scientific",
    "scientist",
    "score",
    "screen",
    "sea",
    "search",
    "season",
    "seat",
    "second",
    "secret",
    "section",
    "see",
    "seed",
    "seeing",
    "seems",
    "seen",
    "seldom",
    "select",
    "selection",
    "sell",
    "send",
    "sense",
    "sent",
    "sentence",
    "separate",
    "series",
    "serious",
    "serve",
    "service",
    "sets",
    "setting",
    "settle",
    "settlers",
    "seven",
    "several",
    "shade",
    "shadow",
    "shake",
    "shaking",
    "shall",
    "shallow",
    "shape",
    "share",
    "sharp",
    "she",
    "sheep",
    "sheet",
    "shelf",
    "shells",
    "shelter",
    "shine",
    "shinning",
    "ship",
    "shirt",
    "shoe",
    "shoot",
    "shop",
    "shore",
    "short",
    "shorter",
    "shot",
    "should",
    "shoulder",
    "shout",
    "show",
    "shown",
    "shut",
    "sick",
    "sides",
    "sight",
    "sign",
    "signal",
    "silence",
    "silent",
    "silk",
    "silly",
    "silver",
    "similar",
    "simple",
    "simplest",
    "simply",
    "since",
    "sing",
    "single",
    "sink",
    "sister",
    "sit",
    "sitting",
    "situation",
    "six",
    "size",
    "skill",
    "skin",
    "sky",
    "slabs",
    "slave",
    "sleep",
    "slept",
    "slide",
    "slight",
    "slightly",
    "slip",
    "slipped",
    "slope",
    "slow",
    "slowly",
    "small",
    "smaller",
    "smallest",
    "smell",
    "smile",
    "smoke",
    "smooth",
    "snake",
    "snow",
    "so",
    "soap",
    "social",
    "society",
    "soft",
    "softly",
    "soil",
    "solar",
    "sold",
    "soldier",
    "solid",
    "solution",
    "solve",
    "some",
    "somebody",
    "somehow",
    "someone",
    "something",
    "sometime",
    "somewhere",
    "son",
    "song",
    "soon",
    "sort",
    "sound",
    "source",
    "south",
    "southern",
    "space",
    "speak",
    "special",
    "species",
    "specific",
    "speech",
    "speed",
    "spell",
    "spend",
    "spent",
    "spider",
    "spin",
    "spirit",
    "spite",
    "split",
    "spoken",
    "sport",
    "spread",
    "spring",
    "square",
    "stage",
    "stairs",
    "stand",
    "standard",
    "star",
    "stared",
    "start",
    "state",
    "statement",
    "station",
    "stay",
    "steady",
    "steam",
    "steel",
    "steep",
    "stems",
    "step",
    "stepped",
    "stick",
    "stiff",
    "still",
    "stock",
    "stomach",
    "stone",
    "stood",
    "stop",
    "stopped",
    "store",
    "storm",
    "story",
    "stove",
    "straight",
    "strange",
    "stranger",
    "straw",
    "stream",
    "street",
    "strength",
    "stretch",
    "strike",
    "string",
    "strip",
    "strong",
    "stronger",
    "struck",
    "structure",
    "struggle",
    "stuck",
    "student",
    "studied",
    "studying",
    "subject",
    "substance",
    "success",
    "successful",
    "such",
    "sudden",
    "suddenly",
    "sugar",
    "suggest",
    "suit",
    "sum",
    "summer",
    "sun",
    "sunlight",
    "supper",
    "supply",
    "support",
    "suppose",
    "sure",
    "surface",
    "surprise",
    "surrounded",
    "swam",
    "sweet",
    "swept",
    "swim",
    "swimming",
    "swing",
    "swung",
    "syllable",
    "symbol",
    "system",
    "table",
    "tail",
    "take",
    "taken",
    "tales",
    "talk",
    "tall",
    "tank",
    "tape",
    "task",
    "taste",
    "taught",
    "tax",
    "tea",
    "teach",
    "teacher",
    "team",
    "tears",
    "teeth",
    "telephone",
    "television",
    "tell",
    "temperature",
    "ten",
    "tent",
    "term",
    "terrible",
    "test",
    "than",
    "thank",
    "that",
    "thee",
    "them",
    "themselves",
    "then",
    "theory",
    "there",
    "therefore",
    "these",
    "they",
    "thick",
    "thin",
    "thing",
    "think",
    "third",
    "thirty",
    "this",
    "those",
    "thou",
    "though",
    "thought",
    "thousand",
    "thread",
    "three",
    "threw",
    "throat",
    "through",
    "throughout",
    "throw",
    "thrown",
    "thumb",
    "thus",
    "thy",
    "tide",
    "tie",
    "tight",
    "tightly",
    "till",
    "time",
    "tin",
    "tiny",
    "tip",
    "tired",
    "title",
    "to",
    "tobacco",
    "today",
    "together",
    "told",
    "tomorrow",
    "tone",
    "tongue",
    "tonight",
    "too",
    "took",
    "tool",
    "top",
    "topic",
    "torn",
    "total",
    "touch",
    "toward",
    "tower",
    "town",
    "toy",
    "trace",
    "track",
    "trade",
    "traffic",
    "trail",
    "train",
    "transportation",
    "trap",
    "travel",
    "treated",
    "tree",
    "triangle",
    "tribe",
    "trick",
    "tried",
    "trip",
    "troops",
    "tropical",
    "trouble",
    "truck",
    "trunk",
    "truth",
    "try",
    "tube",
    "tune",
    "turn",
    "twelve",
    "twenty",
    "twice",
    "two",
    "type",
    "typical",
    "uncle",
    "under",
    "underline",
    "understanding",
    "unhappy",
    "union",
    "unit",
    "universe",
    "unknown",
    "unless",
    "until",
    "unusual",
    "up",
    "upon",
    "upper",
    "upward",
    "us",
    "use",
    "useful",
    "using",
    "usual",
    "usually",
    "valley",
    "valuable",
    "value",
    "vapor",
    "variety",
    "various",
    "vast",
    "vegetable",
    "verb",
    "vertical",
    "very",
    "vessels",
    "victory",
    "view",
    "village",
    "visit",
    "visitor",
    "voice",
    "volume",
    "vote",
    "vowel",
    "voyage",
    "wagon",
    "wait",
    "walk",
    "wall",
    "want",
    "war",
    "warm",
    "warn",
    "was",
    "wash",
    "waste",
    "watch",
    "water",
    "wave",
    "way",
    "we",
    "weak",
    "wealth",
    "wear",
    "weather",
    "week",
    "weigh",
    "weight",
    "welcome",
    "well",
    "went",
    "were",
    "west",
    "western",
    "wet",
    "whale",
    "what",
    "whatever",
    "wheat",
    "wheel",
    "when",
    "whenever",
    "where",
    "wherever",
    "whether",
    "which",
    "while",
    "whispered",
    "whistle",
    "white",
    "who",
    "whole",
    "whom",
    "whose",
    "why",
    "wide",
    "widely",
    "wife",
    "wild",
    "will",
    "willing",
    "win",
    "wind",
    "window",
    "wing",
    "winter",
    "wire",
    "wise",
    "wish",
    "with",
    "within",
    "without",
    "wolf",
    "women",
    "won",
    "wonder",
    "wonderful",
    "wood",
    "wooden",
    "wool",
    "word",
    "wore",
    "work",
    "worker",
    "world",
    "worried",
    "worry",
    "worse",
    "worth",
    "would",
    "wrapped",
    "write",
    "writer",
    "writing",
    "written",
    "wrong",
    "wrote",
    "yard",
    "year",
    "yellow",
    "yes",
    "yesterday",
    "yet",
    "you",
    "young",
    "younger",
    "your",
    "yourself",
    "youth",
    "zero",
    "zebra",
    "zipper",
    "zoo",
    "zulu"
  ];
  var shortestWordSize = wordList.reduce(
    (shortestWord, currentWord) => currentWord.length < shortestWord.length ? currentWord : shortestWord
  ).length;
  var longestWordSize = wordList.reduce(
    (longestWord, currentWord) => currentWord.length > longestWord.length ? currentWord : longestWord
  ).length;
  function generate(options) {
    const random = options?.seed ? new import_seedrandom.default(options.seed) : null;
    const { minLength, maxLength, ...rest } = options || {};
    function word() {
      let min = typeof minLength !== "number" ? shortestWordSize : limitWordSize(minLength);
      const max = typeof maxLength !== "number" ? longestWordSize : limitWordSize(maxLength);
      if (min > max)
        min = max;
      let rightSize = false;
      let wordUsed;
      while (!rightSize) {
        wordUsed = generateRandomWord();
        rightSize = wordUsed.length <= max && wordUsed.length >= min;
      }
      return wordUsed;
    }
    function generateRandomWord() {
      return wordList[randInt(wordList.length)];
    }
    function limitWordSize(wordSize) {
      if (wordSize < shortestWordSize)
        wordSize = shortestWordSize;
      if (wordSize > longestWordSize)
        wordSize = longestWordSize;
      return wordSize;
    }
    function randInt(lessThan) {
      const r = random ? random() : Math.random();
      return Math.floor(r * lessThan);
    }
    if (options === void 0) {
      return word();
    }
    if (typeof options === "number") {
      options = { exactly: options };
    } else if (Object.keys(rest).length === 0) {
      return word();
    }
    if (options.exactly) {
      options.min = options.exactly;
      options.max = options.exactly;
    }
    if (typeof options.wordsPerString !== "number") {
      options.wordsPerString = 1;
    }
    if (typeof options.formatter !== "function") {
      options.formatter = (word2) => word2;
    }
    if (typeof options.separator !== "string") {
      options.separator = " ";
    }
    const total = options.min + randInt(options.max + 1 - options.min);
    let results = [];
    let token = "";
    let relativeIndex = 0;
    for (let i = 0; i < total * options.wordsPerString; i++) {
      if (relativeIndex === options.wordsPerString - 1) {
        token += options.formatter(word(), relativeIndex);
      } else {
        token += options.formatter(word(), relativeIndex) + options.separator;
      }
      relativeIndex++;
      if ((i + 1) % options.wordsPerString === 0) {
        results.push(token);
        token = "";
        relativeIndex = 0;
      }
    }
    if (typeof options.join === "string") {
      results = results.join(options.join);
    }
    return results;
  }

  // five-letter-words-list.js
  var fiveLetterWords = [
    "aback",
    "abase",
    "abate",
    "abaya",
    "abbey",
    "abbot",
    "abets",
    "abhor",
    "abide",
    "abode",
    "abort",
    "about",
    "above",
    "abuse",
    "abuts",
    "abyss",
    "ached",
    "aches",
    "acids",
    "acing",
    "ackee",
    "acorn",
    "acres",
    "acrid",
    "acted",
    "actin",
    "actor",
    "acute",
    "adage",
    "adapt",
    "added",
    "adder",
    "addle",
    "adept",
    "adieu",
    "adios",
    "adits",
    "adman",
    "admin",
    "admit",
    "adobe",
    "adobo",
    "adopt",
    "adore",
    "adorn",
    "adult",
    "adzes",
    "aegis",
    "aeons",
    "aerie",
    "affix",
    "afire",
    "afoot",
    "afore",
    "after",
    "again",
    "agape",
    "agate",
    "agave",
    "agent",
    "aggro",
    "agile",
    "aging",
    "aglow",
    "agony",
    "agora",
    "agree",
    "ahead",
    "ahold",
    "aided",
    "aider",
    "aides",
    "ailed",
    "aimed",
    "aimer",
    "aioli",
    "aired",
    "aisle",
    "alarm",
    "album",
    "alder",
    "aleph",
    "alert",
    "algae",
    "algal",
    "alias",
    "alibi",
    "alien",
    "align",
    "alike",
    "alive",
    "alkyd",
    "alkyl",
    "allay",
    "alley",
    "allot",
    "allow",
    "alloy",
    "allyl",
    "aloes",
    "aloft",
    "aloha",
    "alone",
    "along",
    "aloof",
    "aloud",
    "alpha",
    "altar",
    "alter",
    "altos",
    "alums",
    "amass",
    "amaze",
    "amber",
    "ambit",
    "amble",
    "ambos",
    "amend",
    "amide",
    "amine",
    "amino",
    "amiss",
    "amity",
    "amnio",
    "among",
    "amour",
    "amped",
    "ample",
    "amply",
    "amuse",
    "ancho",
    "angel",
    "anger",
    "angle",
    "angry",
    "angst",
    "anima",
    "anime",
    "anion",
    "anise",
    "ankle",
    "annas",
    "annex",
    "annoy",
    "annul",
    "anode",
    "anole",
    "antic",
    "antis",
    "antsy",
    "anvil",
    "aorta",
    "apace",
    "apart",
    "aphid",
    "apnea",
    "apple",
    "apply",
    "apron",
    "apses",
    "apter",
    "aptly",
    "aquas",
    "arbor",
    "ardor",
    "areal",
    "areas",
    "areca",
    "arena",
    "argon",
    "argot",
    "argue",
    "argus",
    "arias",
    "arils",
    "arise",
    "armed",
    "armor",
    "aroma",
    "arose",
    "array",
    "arrow",
    "arses",
    "arson",
    "artsy",
    "asana",
    "ascot",
    "ashen",
    "ashes",
    "aside",
    "asked",
    "asker",
    "askew",
    "aspen",
    "aspic",
    "assay",
    "asses",
    "asset",
    "aster",
    "astir",
    "asura",
    "atlas",
    "atman",
    "atoll",
    "atoms",
    "atone",
    "atopy",
    "attic",
    "audio",
    "audit",
    "auger",
    "aught",
    "augur",
    "aunts",
    "aunty",
    "aural",
    "auras",
    "autos",
    "auxin",
    "avail",
    "avers",
    "avert",
    "avian",
    "avoid",
    "avows",
    "await",
    "awake",
    "award",
    "aware",
    "awash",
    "awful",
    "awoke",
    "axels",
    "axial",
    "axils",
    "axing",
    "axiom",
    "axion",
    "axles",
    "axons",
    "azide",
    "azole",
    "azure",
    "babel",
    "babes",
    "babka",
    "backs",
    "bacon",
    "baddy",
    "badge",
    "badly",
    "bagel",
    "baggy",
    "bails",
    "bairn",
    "baits",
    "baize",
    "baked",
    "baker",
    "bakes",
    "baldy",
    "baled",
    "baler",
    "bales",
    "balks",
    "balky",
    "balls",
    "balms",
    "balmy",
    "balsa",
    "banal",
    "bands",
    "bandy",
    "banes",
    "bangs",
    "banjo",
    "banks",
    "barbs",
    "bards",
    "bared",
    "barer",
    "bares",
    "barge",
    "barks",
    "barmy",
    "barns",
    "baron",
    "barre",
    "basal",
    "based",
    "baser",
    "bases",
    "basic",
    "basil",
    "basin",
    "basis",
    "basks",
    "basso",
    "bassy",
    "baste",
    "batch",
    "bated",
    "bathe",
    "baths",
    "batik",
    "baton",
    "batts",
    "batty",
    "bawdy",
    "bawls",
    "bayed",
    "bayou",
    "beach",
    "beads",
    "beady",
    "beaks",
    "beams",
    "beamy",
    "beans",
    "beard",
    "bears",
    "beast",
    "beats",
    "beaus",
    "beaut",
    "beaux",
    "bebop",
    "becks",
    "beech",
    "beefs",
    "beefy",
    "beeps",
    "beers",
    "beery",
    "beets",
    "befit",
    "began",
    "beget",
    "begin",
    "begun",
    "beige",
    "being",
    "belay",
    "belch",
    "belie",
    "belle",
    "bells",
    "belly",
    "below",
    "belts",
    "bench",
    "bends",
    "bendy",
    "bento",
    "bents",
    "beret",
    "bergs",
    "berms",
    "berry",
    "berth",
    "beryl",
    "beset",
    "bests",
    "betas",
    "betel",
    "betta",
    "bevel",
    "bezel",
    "bhaji",
    "bible",
    "bicep",
    "biddy",
    "bided",
    "bides",
    "bidet",
    "bight",
    "bigot",
    "bijou",
    "biked",
    "biker",
    "bikes",
    "biles",
    "bilge",
    "bills",
    "billy",
    "bimbo",
    "bindi",
    "binds",
    "binge",
    "bingo",
    "biome",
    "biota",
    "bipod",
    "birch",
    "birds",
    "birth",
    "bison",
    "bitch",
    "biter",
    "bites",
    "bitsy",
    "bitty",
    "black",
    "blade",
    "blame",
    "bland",
    "blank",
    "blare",
    "blase",
    "blast",
    "blaze",
    "bleak",
    "bleat",
    "blebs",
    "bleed",
    "bleep",
    "blend",
    "bless",
    "blimp",
    "blind",
    "bling",
    "blini",
    "blink",
    "blips",
    "bliss",
    "blitz",
    "bloat",
    "blobs",
    "block",
    "blocs",
    "blogs",
    "bloke",
    "blond",
    "blood",
    "bloom",
    "bloop",
    "blots",
    "blown",
    "blows",
    "blued",
    "blues",
    "bluey",
    "bluff",
    "blunt",
    "blurb",
    "blurs",
    "blurt",
    "blush",
    "board",
    "boars",
    "boast",
    "boats",
    "bobby",
    "bocce",
    "boche",
    "boded",
    "bodes",
    "boffo",
    "bogey",
    "boggy",
    "bogie",
    "bogus",
    "boils",
    "bolas",
    "boles",
    "bolls",
    "bolts",
    "bolus",
    "bombe",
    "bombs",
    "bonds",
    "boned",
    "boner",
    "bones",
    "boney",
    "bongo",
    "bongs",
    "bonks",
    "bonny",
    "bonus",
    "boobs",
    "booby",
    "booed",
    "books",
    "booms",
    "boomy",
    "boons",
    "boors",
    "boost",
    "booth",
    "boots",
    "booty",
    "booze",
    "boozy",
    "boppy",
    "borax",
    "bored",
    "borer",
    "bores",
    "boric",
    "borne",
    "boron",
    "bosom",
    "boson",
    "bossy",
    "bosun",
    "botch",
    "bough",
    "boule",
    "bound",
    "bouts",
    "bowed",
    "bowel",
    "bower",
    "bowls",
    "boxed",
    "boxer",
    "boxes",
    "boyar",
    "boyos",
    "bozos",
    "brace",
    "bract",
    "brads",
    "brags",
    "braid",
    "brain",
    "brake",
    "brand",
    "brans",
    "brash",
    "brass",
    "brats",
    "brave",
    "bravo",
    "brawl",
    "brawn",
    "brays",
    "braze",
    "bread",
    "break",
    "bream",
    "breed",
    "brews",
    "briar",
    "bribe",
    "brick",
    "bride",
    "brief",
    "brier",
    "brigs",
    "brims",
    "brine",
    "bring",
    "brink",
    "briny",
    "brisk",
    "brits",
    "broad",
    "broch",
    "broil",
    "broke",
    "brome",
    "bronc",
    "brood",
    "brook",
    "broom",
    "broth",
    "brown",
    "brows",
    "bruin",
    "bruit",
    "brunt",
    "brush",
    "brute",
    "bubba",
    "bucks",
    "buddy",
    "budge",
    "buffs",
    "buggy",
    "bugle",
    "build",
    "built",
    "bulbs",
    "bulge",
    "bulks",
    "bulky",
    "bulla",
    "bulls",
    "bully",
    "bumps",
    "bumpy",
    "bunch",
    "bunds",
    "bundt",
    "bunks",
    "bunny",
    "bunts",
    "buoys",
    "burbs",
    "burgs",
    "burka",
    "burly",
    "burns",
    "burnt",
    "burps",
    "burqa",
    "burro",
    "burrs",
    "bursa",
    "burst",
    "bused",
    "buses",
    "bushy",
    "busts",
    "busty",
    "butch",
    "butte",
    "butts",
    "buxom",
    "buyer",
    "buzzy",
    "bylaw",
    "byres",
    "bytes",
    "byway",
    "cabal",
    "cabby",
    "caber",
    "cabin",
    "cable",
    "cacao",
    "cache",
    "cacti",
    "caddy",
    "cadet",
    "cadre",
    "cafes",
    "caged",
    "cages",
    "cagey",
    "cairn",
    "caked",
    "cakes",
    "cakey",
    "calfs",
    "calif",
    "calla",
    "calls",
    "calms",
    "calve",
    "calyx",
    "camel",
    "cameo",
    "campo",
    "camps",
    "campy",
    "canal",
    "candy",
    "caned",
    "canes",
    "canid",
    "canna",
    "canny",
    "canoe",
    "canon",
    "canto",
    "caped",
    "caper",
    "capes",
    "capon",
    "capos",
    "caput",
    "carat",
    "carbo",
    "carbs",
    "cards",
    "cared",
    "carer",
    "cares",
    "cargo",
    "carob",
    "carol",
    "carom",
    "carps",
    "carry",
    "carte",
    "carts",
    "carve",
    "cased",
    "cases",
    "casks",
    "caste",
    "casts",
    "catch",
    "cater",
    "catty",
    "caulk",
    "cause",
    "caved",
    "caver",
    "caves",
    "cavil",
    "cease",
    "cecal",
    "cecum",
    "cedar",
    "ceded",
    "cedes",
    "ceili",
    "celeb",
    "cello",
    "cells",
    "celts",
    "cents",
    "chads",
    "chafe",
    "chaff",
    "chain",
    "chair",
    "chalk",
    "champ",
    "chana",
    "chant",
    "chaos",
    "chaps",
    "chard",
    "charm",
    "chars",
    "chart",
    "chase",
    "chasm",
    "chats",
    "cheap",
    "cheat",
    "check",
    "cheek",
    "cheep",
    "cheer",
    "chefs",
    "chemo",
    "chert",
    "chess",
    "chest",
    "chews",
    "chewy",
    "chica",
    "chick",
    "chico",
    "chide",
    "chief",
    "child",
    "chile",
    "chili",
    "chill",
    "chime",
    "chimp",
    "china",
    "chine",
    "ching",
    "chino",
    "chins",
    "chips",
    "chirp",
    "chits",
    "chive",
    "chock",
    "choir",
    "choke",
    "chomp",
    "chops",
    "chord",
    "chore",
    "chose",
    "chows",
    "chubs",
    "chuck",
    "chuff",
    "chugs",
    "chump",
    "chums",
    "chunk",
    "churn",
    "chute",
    "cider",
    "cigar",
    "cinch",
    "circa",
    "cisco",
    "cited",
    "cites",
    "civet",
    "civic",
    "civil",
    "civvy",
    "clack",
    "clade",
    "claim",
    "clamp",
    "clams",
    "clang",
    "clank",
    "clans",
    "claps",
    "clash",
    "clasp",
    "class",
    "clave",
    "claws",
    "clays",
    "clean",
    "clear",
    "cleat",
    "clefs",
    "cleft",
    "clerk",
    "click",
    "cliff",
    "climb",
    "clime",
    "cline",
    "cling",
    "clink",
    "clips",
    "cloak",
    "clock",
    "clods",
    "clogs",
    "clomp",
    "clone",
    "close",
    "cloth",
    "clots",
    "cloud",
    "clout",
    "clove",
    "clown",
    "clubs",
    "cluck",
    "clued",
    "clues",
    "clump",
    "clung",
    "clunk",
    "coach",
    "coals",
    "coast",
    "coati",
    "coats",
    "cobia",
    "cobra",
    "cocci",
    "cocks",
    "cocky",
    "cocoa",
    "codas",
    "codec",
    "coded",
    "coder",
    "codes",
    "codex",
    "codon",
    "coeds",
    "cohos",
    "coifs",
    "coils",
    "coins",
    "cokes",
    "colas",
    "colds",
    "coles",
    "colic",
    "colin",
    "colon",
    "color",
    "colts",
    "comas",
    "combo",
    "combs",
    "comer",
    "comes",
    "comet",
    "comfy",
    "comic",
    "comma",
    "commo",
    "compo",
    "comps",
    "comte",
    "conch",
    "condo",
    "coned",
    "cones",
    "conga",
    "congo",
    "conic",
    "conks",
    "cooed",
    "cooks",
    "cools",
    "coops",
    "coopt",
    "coped",
    "copes",
    "copra",
    "copse",
    "coral",
    "cords",
    "cored",
    "corer",
    "cores",
    "corgi",
    "corks",
    "corky",
    "corms",
    "corns",
    "cornu",
    "corny",
    "corps",
    "costs",
    "cotta",
    "couch",
    "cough",
    "could",
    "count",
    "coupe",
    "coups",
    "court",
    "coven",
    "cover",
    "coves",
    "covet",
    "covey",
    "cowed",
    "cower",
    "cowls",
    "coyly",
    "crabs",
    "crack",
    "craft",
    "crags",
    "cramp",
    "crams",
    "crane",
    "crank",
    "crape",
    "craps",
    "crash",
    "crass",
    "crate",
    "crave",
    "crawl",
    "craws",
    "craze",
    "crazy",
    "creak",
    "cream",
    "credo",
    "creed",
    "creek",
    "creel",
    "creep",
    "creme",
    "crepe",
    "crept",
    "cress",
    "crest",
    "crews",
    "cribs",
    "crick",
    "cried",
    "crier",
    "cries",
    "crime",
    "crimp",
    "crisp",
    "crits",
    "croak",
    "crock",
    "crocs",
    "croft",
    "crone",
    "crony",
    "crook",
    "croon",
    "crops",
    "cross",
    "croup",
    "crowd",
    "crown",
    "crows",
    "crude",
    "cruel",
    "cruet",
    "crumb",
    "cruse",
    "crush",
    "crust",
    "crypt",
    "cubby",
    "cubed",
    "cubes",
    "cubic",
    "cubit",
    "cuddy",
    "cuffs",
    "culls",
    "culpa",
    "cults",
    "cumin",
    "cupid",
    "cuppa",
    "curbs",
    "curds",
    "cured",
    "cures",
    "curia",
    "curio",
    "curls",
    "curly",
    "curry",
    "curse",
    "curve",
    "curvy",
    "cushy",
    "cusps",
    "cuter",
    "cutie",
    "cutis",
    "cutup",
    "cycad",
    "cycle",
    "cyclo",
    "cynic",
    "cysts",
    "czars",
    "dacha",
    "daddy",
    "dados",
    "daffy",
    "daily",
    "dairy",
    "daisy",
    "dales",
    "dames",
    "damns",
    "damps",
    "dance",
    "dandy",
    "dared",
    "dares",
    "darks",
    "darns",
    "darts",
    "dashi",
    "dated",
    "dater",
    "dates",
    "datum",
    "daubs",
    "daunt",
    "davit",
    "dawns",
    "dazed",
    "deals",
    "dealt",
    "deans",
    "dears",
    "deary",
    "death",
    "debit",
    "debts",
    "debug",
    "debut",
    "decaf",
    "decal",
    "decay",
    "decks",
    "decor",
    "decoy",
    "decry",
    "deeds",
    "deems",
    "deeps",
    "deers",
    "defer",
    "deify",
    "deign",
    "deism",
    "deist",
    "deity",
    "dekes",
    "delay",
    "delft",
    "delis",
    "dells",
    "delta",
    "delve",
    "demon",
    "demos",
    "demur",
    "denim",
    "dense",
    "dents",
    "depot",
    "depth",
    "derby",
    "desks",
    "deter",
    "detox",
    "deuce",
    "devil",
    "dewar",
    "dhikr",
    "dhows",
    "dials",
    "diary",
    "diced",
    "dices",
    "dicey",
    "dicky",
    "dicta",
    "diets",
    "digit",
    "diked",
    "dikes",
    "dills",
    "dilly",
    "dimer",
    "dimes",
    "dimly",
    "dinar",
    "dined",
    "diner",
    "dines",
    "dingo",
    "dings",
    "dingy",
    "dinks",
    "dinky",
    "dinos",
    "diode",
    "dippy",
    "direr",
    "dirge",
    "dirty",
    "disco",
    "discs",
    "dishy",
    "disks",
    "ditch",
    "ditsy",
    "ditto",
    "ditty",
    "ditzy",
    "divan",
    "divas",
    "dived",
    "diver",
    "dives",
    "divot",
    "divvy",
    "dizzy",
    "docks",
    "dodge",
    "dodgy",
    "dodos",
    "doers",
    "doffs",
    "doges",
    "doggy",
    "dogma",
    "doing",
    "doled",
    "doles",
    "dolls",
    "dolly",
    "dolor",
    "dolts",
    "domed",
    "domes",
    "donee",
    "dongs",
    "donna",
    "donor",
    "donut",
    "dooms",
    "doomy",
    "doors",
    "doozy",
    "doped",
    "dopes",
    "dopey",
    "dorks",
    "dorky",
    "dorms",
    "dosas",
    "dosed",
    "doses",
    "doted",
    "dotes",
    "dotty",
    "doubt",
    "dough",
    "doula",
    "douse",
    "doves",
    "dowdy",
    "dowel",
    "dower",
    "downs",
    "downy",
    "dowry",
    "dowse",
    "doyen",
    "dozed",
    "dozen",
    "dozer",
    "dozes",
    "drabs",
    "draft",
    "drags",
    "drain",
    "drake",
    "drama",
    "drams",
    "drank",
    "drape",
    "drawl",
    "drawn",
    "draws",
    "drays",
    "dread",
    "dream",
    "dreck",
    "dregs",
    "dress",
    "dribs",
    "dried",
    "drier",
    "dries",
    "drift",
    "drill",
    "drily",
    "drink",
    "drips",
    "drive",
    "droid",
    "droll",
    "drone",
    "drool",
    "droop",
    "drops",
    "dross",
    "drove",
    "drown",
    "drugs",
    "druid",
    "drums",
    "drunk",
    "drupe",
    "dryad",
    "dryer",
    "dryly",
    "duals",
    "ducal",
    "ducat",
    "duchy",
    "ducks",
    "ducky",
    "ducts",
    "dudes",
    "duels",
    "duets",
    "duffs",
    "dukes",
    "dulls",
    "dully",
    "dulse",
    "dumbo",
    "dummy",
    "dumps",
    "dumpy",
    "dunce",
    "dunes",
    "dunks",
    "duomo",
    "duped",
    "dupes",
    "dural",
    "durum",
    "dusks",
    "dusky",
    "dusts",
    "dusty",
    "dutch",
    "duvet",
    "dwarf",
    "dweeb",
    "dwell",
    "dwelt",
    "dyads",
    "dyers",
    "dying",
    "dykes",
    "eager",
    "eagle",
    "eared",
    "earls",
    "early",
    "earns",
    "earth",
    "eased",
    "easel",
    "easer",
    "eases",
    "eaten",
    "eater",
    "eaves",
    "ebbed",
    "ebony",
    "ebook",
    "echos",
    "eclat",
    "edema",
    "edged",
    "edger",
    "edges",
    "edict",
    "edify",
    "edits",
    "eejit",
    "eerie",
    "egged",
    "egret",
    "eider",
    "eidos",
    "eight",
    "eject",
    "ejido",
    "eland",
    "elbow",
    "elder",
    "elect",
    "elegy",
    "elide",
    "elite",
    "elope",
    "elude",
    "elute",
    "elven",
    "elves",
    "email",
    "embed",
    "ember",
    "emcee",
    "emery",
    "emirs",
    "emits",
    "emote",
    "empty",
    "enact",
    "ended",
    "endow",
    "enema",
    "enemy",
    "enjoy",
    "ennui",
    "enoki",
    "enrol",
    "ensue",
    "enter",
    "entry",
    "envoy",
    "eosin",
    "epics",
    "epoch",
    "epoxy",
    "equal",
    "equip",
    "erase",
    "erect",
    "ergot",
    "erode",
    "erred",
    "error",
    "erupt",
    "essay",
    "ether",
    "ethic",
    "ethos",
    "ethyl",
    "etude",
    "euros",
    "evade",
    "evens",
    "event",
    "every",
    "evict",
    "evils",
    "evoke",
    "ewers",
    "exact",
    "exalt",
    "exams",
    "excel",
    "execs",
    "exert",
    "exile",
    "exist",
    "exits",
    "expat",
    "expel",
    "expos",
    "extol",
    "extra",
    "exude",
    "exult",
    "exurb",
    "eying",
    "eyrie",
    "fable",
    "faced",
    "facer",
    "faces",
    "facet",
    "facia",
    "facts",
    "faded",
    "fader",
    "fades",
    "faery",
    "fails",
    "faint",
    "fairs",
    "fairy",
    "faith",
    "faked",
    "faker",
    "fakes",
    "fakie",
    "fakir",
    "falls",
    "famed",
    "fancy",
    "fangs",
    "fanny",
    "farce",
    "fared",
    "fares",
    "farms",
    "farts",
    "fasts",
    "fatal",
    "fated",
    "fates",
    "fatso",
    "fatty",
    "fatwa",
    "fault",
    "fauna",
    "fauns",
    "favas",
    "faves",
    "favor",
    "fawns",
    "faxed",
    "faxes",
    "fazed",
    "fazes",
    "fears",
    "feast",
    "feats",
    "fecal",
    "feces",
    "feeds",
    "feels",
    "feign",
    "feint",
    "fella",
    "fells",
    "felon",
    "felts",
    "femme",
    "femur",
    "fence",
    "fends",
    "feral",
    "feria",
    "ferns",
    "ferny",
    "ferry",
    "fests",
    "fetal",
    "fetch",
    "feted",
    "fetes",
    "fetid",
    "fetus",
    "feuds",
    "fever",
    "fewer",
    "fiats",
    "fiber",
    "fibre",
    "fiche",
    "ficus",
    "fiefs",
    "field",
    "fiend",
    "fiery",
    "fifes",
    "fifth",
    "fifty",
    "fight",
    "filch",
    "filed",
    "filer",
    "files",
    "filet",
    "fills",
    "filly",
    "films",
    "filmy",
    "filth",
    "final",
    "finca",
    "finch",
    "finds",
    "fined",
    "finer",
    "fines",
    "finis",
    "finks",
    "fiord",
    "fired",
    "fires",
    "firms",
    "first",
    "fishy",
    "fists",
    "fitly",
    "fiver",
    "fives",
    "fixed",
    "fixer",
    "fixes",
    "fizzy",
    "fjord",
    "flack",
    "flags",
    "flail",
    "flair",
    "flake",
    "flaky",
    "flame",
    "flank",
    "flans",
    "flaps",
    "flare",
    "flash",
    "flask",
    "flats",
    "flaws",
    "flays",
    "fleas",
    "fleck",
    "flees",
    "fleet",
    "flesh",
    "flick",
    "flier",
    "flies",
    "fling",
    "float",
    "flood",
    "floor",
    "flour",
    "flown",
    "flows",
    "fluid",
    "flyer",
    "focal",
    "focus",
    "folks",
    "fonts",
    "foods",
    "force",
    "forms",
    "forth",
    "forty",
    "forum",
    "found",
    "frame",
    "fraud",
    "fresh",
    "fried",
    "fries",
    "front",
    "frost",
    "fruit",
    "fuels",
    "fully",
    "funds",
    "funny",
    "gains",
    "games",
    "gamma",
    "gases",
    "gates",
    "gauge",
    "gears",
    "genes",
    "genre",
    "ghost",
    "giant",
    "gifts",
    "girls",
    "given",
    "gives",
    "gland",
    "glass",
    "globe",
    "glory",
    "gloss",
    "glove",
    "glued",
    "goals",
    "goats",
    "going",
    "goods",
    "goose",
    "grace",
    "grade",
    "grain",
    "grams",
    "grand",
    "grant",
    "grape",
    "graph",
    "grasp",
    "grass",
    "grave",
    "great",
    "greek",
    "green",
    "greet",
    "grief",
    "grill",
    "grind",
    "grips",
    "gross",
    "group",
    "grove",
    "grown",
    "growl",
    "grows",
    "guard",
    "guess",
    "guest",
    "guide",
    "guild",
    "guilt",
    "habit",
    "hairs",
    "halls",
    "hands",
    "handy",
    "hangs",
    "happy",
    "harsh",
    "hated",
    "hates",
    "haven",
    "hawks",
    "heads",
    "heard",
    "heart",
    "heavy",
    "hedge",
    "heels",
    "hello",
    "helps",
    "hence",
    "herbs",
    "highs",
    "hills",
    "hints",
    "hired",
    "hobby",
    "holds",
    "holes",
    "holly",
    "homes",
    "honey",
    "honor",
    "hooks",
    "hoped",
    "hopes",
    "horns",
    "horse",
    "hosts",
    "hotel",
    "hound",
    "hours",
    "house",
    "hover",
    "human",
    "humor",
    "hurts",
    "icons",
    "ideal",
    "ideas",
    "idiot",
    "image",
    "imply",
    "inbox",
    "incur",
    "index",
    "indie",
    "inner",
    "input",
    "intro",
    "issue",
    "items",
    "inert",
    "infer",
    "infix",
    "infos",
    "infra",
    "ingan",
    "ingle",
    "ingot",
    "inion",
    "inked",
    "inker",
    "inkle",
    "inlay",
    "inlet",
    "inned",
    "inner",
    "innie",
    "innit",
    "inorb",
    "input",
    "inrun",
    "insee",
    "inset",
    "inspo",
    "intel",
    "inter",
    "intis",
    "intra",
    "intro",
    "inula",
    "inure",
    "inurn",
    "invar",
    "inver",
    "inwit",
    "iodic",
    "iodin",
    "ionic",
    "ioras",
    "iotas",
    "ippon",
    "irade",
    "iring",
    "irked",
    "iroko",
    "irons",
    "irony",
    "isbas",
    "ishes",
    "isled",
    "isles",
    "islet",
    "isnae",
    "idler",
    "idles",
    "idlis",
    "idola",
    "idols",
    "idyll",
    "idyls",
    "iftar",
    "igapo",
    "igged",
    "igloo",
    "iglus",
    "ignis",
    "ihram",
    "ikans",
    "ikats",
    "ikons",
    "ileac",
    "ileal",
    "ileum",
    "ileus",
    "iliac",
    "iliad",
    "ilial",
    "ilium",
    "iller",
    "illth",
    "image",
    "imago",
    "imams",
    "imari",
    "imaum",
    "imbar",
    "imbos",
    "imbue",
    "imide",
    "imido",
    "imids",
    "imine",
    "imino",
    "imlis",
    "immew",
    "immit",
    "immix",
    "imped",
    "impel",
    "impis",
    "imply",
    "impot",
    "impro",
    "imshi",
    "imshy",
    "inane",
    "inapt",
    "inarm",
    "inbox",
    "inbye",
    "incas",
    "incel",
    "incog",
    "incur",
    "incus",
    "incut",
    "index",
    "india",
    "indie",
    "indol",
    "indri",
    "indue",
    "inept",
    "issei",
    "issue",
    "istle",
    "itchy",
    "items",
    "ivied",
    "ivies",
    "ivory",
    "ixias",
    "ixnay",
    "ixora",
    "ixtle",
    "izard",
    "izars",
    "izzat",
    "jeans",
    "jelly",
    "jewel",
    "joins",
    "joint",
    "jokes",
    "judge",
    "juice",
    "juicy",
    "jumps",
    "jabot",
    "jacal",
    "jacks",
    "jacky",
    "jaded",
    "jades",
    "jager",
    "jaggy",
    "jails",
    "jakes",
    "jalap",
    "jalee",
    "jalor",
    "jalur",
    "jambe",
    "jambs",
    "jammy",
    "janes",
    "janky",
    "japan",
    "japed",
    "japer",
    "japes",
    "jarls",
    "jasey",
    "jaspe",
    "jatis",
    "jatos",
    "jaunt",
    "jaups",
    "jawan",
    "jawed",
    "jazzy",
    "jeans",
    "jebel",
    "jedis",
    "jeers",
    "jefes",
    "jehad",
    "jello",
    "jells",
    "jelly",
    "jemmy",
    "jenny",
    "keeps",
    "kicks",
    "kills",
    "kinda",
    "kinds",
    "kings",
    "knees",
    "knife",
    "knock",
    "knots",
    "known",
    "knows",
    "keeps",
    "kills",
    "kench",
    "kilos",
    "knelt",
    "koala",
    "knead",
    "kayak",
    "kevel",
    "knack",
    "knoll",
    "kooky",
    "kicks",
    "kaput",
    "khaki",
    "knees",
    "knock",
    "krill",
    "kudos",
    "kempt",
    "kiosk",
    "knell",
    "knife",
    "krait",
    "kites",
    "keeve",
    "kiddy",
    "kneel",
    "knobs",
    "knurl",
    "kaama",
    "kabab",
    "kabar",
    "kabob",
    "kacha",
    "kacks",
    "kadai",
    "kades",
    "kadis",
    "kails",
    "kaims",
    "kaing",
    "kains",
    "kajal",
    "kakas",
    "kakis",
    "kalam",
    "kalas",
    "kales",
    "kalif",
    "kalis",
    "kalpa",
    "kalua",
    "kanae",
    "kanal",
    "kanas",
    "kanat",
    "kandy",
    "kaneh",
    "kanes",
    "karns",
    "karoo",
    "karos",
    "karri",
    "karst",
    "karsy",
    "karts",
    "karzy",
    "kasha",
    "katal",
    "katas",
    "katis",
    "katti",
    "kerry",
    "kesar",
    "kests",
    "ketas",
    "ketch",
    "ketol",
    "kevil",
    "kexes",
    "keyed",
    "keyer",
    "kibbe",
    "kibbi",
    "kibei",
    "kibes",
    "kibla",
    "kicky",
    "kiddo",
    "kidel",
    "kidge",
    "kiefs",
    "kiers",
    "kieve",
    "kiley",
    "kilig",
    "kilps",
    "kilts",
    "kilty",
    "kinda",
    "kinds",
    "kindy",
    "kines",
    "kings",
    "kingy",
    "label",
    "labor",
    "lacks",
    "lakes",
    "lamps",
    "lands",
    "lanes",
    "large",
    "laser",
    "lasts",
    "later",
    "laugh",
    "layer",
    "leads",
    "leaks",
    "learn",
    "lease",
    "least",
    "leave",
    "legal",
    "lemon",
    "level",
    "lever",
    "light",
    "liked",
    "likes",
    "limbs",
    "limit",
    "lined",
    "linen",
    "liner",
    "lines",
    "links",
    "lions",
    "lists",
    "lived",
    "liver",
    "lives",
    "loads",
    "loans",
    "lobby",
    "local",
    "locks",
    "lodge",
    "logic",
    "logos",
    "looks",
    "loops",
    "loose",
    "lords",
    "loses",
    "loser",
    "loved",
    "lover",
    "loves",
    "lower",
    "loyal",
    "lucky",
    "lunar",
    "lunch",
    "lungs",
    "lying",
    "lacey",
    "lacis",
    "lacka",
    "lacks",
    "laddu",
    "laddy",
    "laded",
    "ladee",
    "laden",
    "lader",
    "ladle",
    "ladoo",
    "lairs",
    "lairy",
    "laith",
    "laity",
    "laked",
    "laker",
    "lakes",
    "lance",
    "lanch",
    "lande",
    "lands",
    "laned",
    "lanes",
    "lanky",
    "lants",
    "lapas",
    "lapel",
    "lapin",
    "lapis",
    "lapje",
    "lappa",
    "lappy",
    "lapse",
    "larch",
    "lards",
    "lardy",
    "laree",
    "larva",
    "lased",
    "laser",
    "lases",
    "lassi",
    "lasso",
    "lassy",
    "lasts",
    "latah",
    "latch",
    "later",
    "leany",
    "leaps",
    "leapt",
    "learn",
    "lears",
    "leary",
    "lease",
    "leash",
    "least",
    "leats",
    "leave",
    "leavy",
    "leaze",
    "leben",
    "leccy",
    "leche",
    "ledes",
    "leeps",
    "leers",
    "leery",
    "leese",
    "leets",
    "leeze",
    "lefte",
    "lefts",
    "lefty",
    "legal",
    "leger",
    "leges",
    "legge",
    "leggo",
    "macro",
    "magic",
    "major",
    "maker",
    "makes",
    "males",
    "maple",
    "march",
    "marks",
    "marry",
    "masks",
    "match",
    "mates",
    "maths",
    "matte",
    "maybe",
    "mayor",
    "meals",
    "means",
    "meant",
    "meats",
    "medal",
    "media",
    "meets",
    "melee",
    "menus",
    "mercy",
    "merge",
    "merit",
    "merry",
    "messy",
    "metal",
    "meter",
    "metro",
    "micro",
    "midst",
    "might",
    "miles",
    "minds",
    "mines",
    "minor",
    "minus",
    "mixed",
    "mixer",
    "mixes",
    "model",
    "modem",
    "modes",
    "moist",
    "money",
    "month",
    "moral",
    "motor",
    "mount",
    "mouse",
    "mouth",
    "moved",
    "moves",
    "movie",
    "music",
    "myths",
    "nails",
    "naked",
    "named",
    "names",
    "nasal",
    "nasty",
    "naval",
    "needs",
    "nerve",
    "never",
    "newer",
    "newly",
    "nexus",
    "nicer",
    "niche",
    "night",
    "ninja",
    "ninth",
    "noble",
    "nodes",
    "noise",
    "noisy",
    "norms",
    "north",
    "notch",
    "noted",
    "notes",
    "novel",
    "nurse",
    "nylon",
    "oasis",
    "occur",
    "ocean",
    "offer",
    "often",
    "older",
    "olive",
    "omega",
    "onion",
    "onset",
    "opens",
    "opera",
    "opted",
    "optic",
    "orbit",
    "order",
    "organ",
    "other",
    "ought",
    "ounce",
    "outer",
    "owned",
    "owner",
    "oxide",
    "ocker",
    "ocote",
    "ocrea",
    "octad",
    "octal",
    "octan",
    "octas",
    "octet",
    "octic",
    "octli",
    "octyl",
    "oculi",
    "odahs",
    "odals",
    "odder",
    "oddly",
    "odeon",
    "odeum",
    "odist",
    "odium",
    "odoom",
    "odors",
    "odour",
    "odsos",
    "odums",
    "odyle",
    "odyls",
    "oecus",
    "ofays",
    "offal",
    "offed",
    "offer",
    "oflag",
    "often",
    "ofuro",
    "ogams",
    "ogees",
    "oggin",
    "ogham",
    "ogive",
    "ogled",
    "ogler",
    "ogles",
    "ogmic",
    "ogres",
    "ohelo",
    "ohias",
    "ohing",
    "ohmic",
    "oicks",
    "oidia",
    "oiled",
    "oiler",
    "oints",
    "oiran",
    "ojime",
    "okapi",
    "okays",
    "okehs",
    "okies",
    "oking",
    "otter",
    "packs",
    "pages",
    "pains",
    "paint",
    "pairs",
    "panel",
    "panic",
    "pants",
    "paper",
    "parks",
    "parts",
    "party",
    "pasta",
    "paste",
    "patch",
    "paths",
    "patio",
    "pause",
    "peace",
    "peach",
    "peaks",
    "pearl",
    "pedal",
    "peers",
    "penis",
    "penny",
    "perks",
    "pests",
    "petty",
    "phase",
    "phone",
    "photo",
    "piano",
    "picks",
    "piece",
    "piles",
    "pills",
    "pilot",
    "pinch",
    "pipes",
    "pitch",
    "pixel",
    "pizza",
    "place",
    "plain",
    "plane",
    "plans",
    "plant",
    "plate",
    "plays",
    "plaza",
    "plots",
    "plugs",
    "poems",
    "point",
    "poker",
    "polar",
    "poles",
    "polls",
    "pools",
    "porch",
    "pores",
    "ports",
    "posed",
    "poses",
    "posts",
    "pouch",
    "pound",
    "power",
    "press",
    "price",
    "pride",
    "prime",
    "print",
    "prior",
    "prize",
    "probe",
    "promo",
    "prone",
    "proof",
    "props",
    "proud",
    "prove",
    "proxy",
    "psalm",
    "pulls",
    "pulse",
    "pumps",
    "punch",
    "pupil",
    "puppy",
    "purse",
    "queen",
    "query",
    "quest",
    "queue",
    "quick",
    "quiet",
    "quilt",
    "quite",
    "quote",
    "qadis",
    "qaids",
    "qajaq",
    "qanat",
    "qapik",
    "qibla",
    "qilas",
    "qipao",
    "qophs",
    "qorma",
    "quabs",
    "quack",
    "quads",
    "quaff",
    "quags",
    "quail",
    "quair",
    "quais",
    "quake",
    "quaky",
    "quale",
    "qualm",
    "qualy",
    "quank",
    "quant",
    "quare",
    "quark",
    "quarl",
    "quart",
    "quash",
    "queek",
    "queem",
    "queen",
    "queer",
    "quell",
    "queme",
    "quena",
    "quern",
    "query",
    "queso",
    "quest",
    "quete",
    "queue",
    "queyn",
    "queys",
    "queyu",
    "quibs",
    "quich",
    "races",
    "racks",
    "radar",
    "radio",
    "rails",
    "rainy",
    "raise",
    "rally",
    "ranch",
    "range",
    "ranks",
    "rapid",
    "rated",
    "rates",
    "ratio",
    "razor",
    "reach",
    "react",
    "reads",
    "ready",
    "realm",
    "rebel",
    "refer",
    "reign",
    "relax",
    "relay",
    "renal",
    "renew",
    "reply",
    "reset",
    "resin",
    "retro",
    "rider",
    "rides",
    "ridge",
    "rifle",
    "right",
    "rigid",
    "rings",
    "rinse",
    "risen",
    "rises",
    "risks",
    "risky",
    "rival",
    "river",
    "roads",
    "roast",
    "robot",
    "rocks",
    "rocky",
    "rogue",
    "roles",
    "rolls",
    "roman",
    "rooms",
    "roots",
    "ropes",
    "roses",
    "rough",
    "round",
    "route",
    "royal",
    "rugby",
    "ruins",
    "ruled",
    "ruler",
    "rules",
    "rural",
    "rakee",
    "raker",
    "rakes",
    "rakhi",
    "rakia",
    "rakis",
    "rakki",
    "raksi",
    "rakus",
    "rales",
    "ralli",
    "rally",
    "ralph",
    "ramal",
    "ramee",
    "ramen",
    "rames",
    "ramet",
    "ramie",
    "ramin",
    "ramis",
    "rammy",
    "ramon",
    "ramps",
    "ramus",
    "ranas",
    "rance",
    "ranch",
    "rando",
    "rands",
    "randy",
    "ranee",
    "ranes",
    "ranga",
    "range",
    "rangi",
    "rangy",
    "ranid",
    "ranis",
    "ranke",
    "ranks",
    "sadly",
    "safer",
    "salad",
    "sales",
    "salon",
    "sandy",
    "satin",
    "sauce",
    "saved",
    "saves",
    "scale",
    "scalp",
    "scans",
    "scare",
    "scarf",
    "scary",
    "scene",
    "scent",
    "scoop",
    "scope",
    "score",
    "scout",
    "scrap",
    "screw",
    "seals",
    "seams",
    "seats",
    "seeds",
    "seeks",
    "seems",
    "sells",
    "sends",
    "sense",
    "serum",
    "serve",
    "setup",
    "seven",
    "sewer",
    "shade",
    "shaft",
    "shake",
    "shall",
    "shame",
    "shape",
    "share",
    "shark",
    "sharp",
    "sheep",
    "sheer",
    "sheet",
    "shelf",
    "shell",
    "shift",
    "shine",
    "shiny",
    "ships",
    "shirt",
    "shock",
    "shoes",
    "shook",
    "shoot",
    "shops",
    "shore",
    "short",
    "shots",
    "shown",
    "shows",
    "sides",
    "siege",
    "sight",
    "sigma",
    "signs",
    "silly",
    "since",
    "sites",
    "sixth",
    "sized",
    "sizes",
    "skies",
    "skill",
    "skins",
    "skirt",
    "skull",
    "slate",
    "slave",
    "sleek",
    "sleep",
    "slept",
    "slice",
    "slide",
    "sling",
    "slope",
    "slots",
    "small",
    "smart",
    "smell",
    "smile",
    "smoke",
    "snack",
    "snake",
    "sneak",
    "socks",
    "soils",
    "solar",
    "solid",
    "solve",
    "songs",
    "sonic",
    "sorry",
    "sorts",
    "souls",
    "sound",
    "south",
    "space",
    "spare",
    "spark",
    "speak",
    "spear",
    "specs",
    "speed",
    "spell",
    "spend",
    "spent",
    "sperm",
    "spice",
    "spicy",
    "spike",
    "spine",
    "spite",
    "split",
    "spoke",
    "spoon",
    "sport",
    "spots",
    "spray",
    "spurs",
    "squad",
    "stack",
    "staff",
    "stage",
    "stain",
    "stake",
    "stamp",
    "stand",
    "stare",
    "stark",
    "stars",
    "start",
    "state",
    "stats",
    "stays",
    "steak",
    "steal",
    "steam",
    "steel",
    "steep",
    "steer",
    "stems",
    "steps",
    "stick",
    "stiff",
    "still",
    "stock",
    "stole",
    "stone",
    "stood",
    "stool",
    "stops",
    "store",
    "storm",
    "story",
    "stove",
    "strap",
    "straw",
    "strip",
    "stuck",
    "study",
    "stuff",
    "style",
    "sucks",
    "sugar",
    "suite",
    "suits",
    "sunny",
    "super",
    "surge",
    "sushi",
    "swear",
    "sweat",
    "sweet",
    "swept",
    "swift",
    "swing",
    "swiss",
    "sword",
    "syrup",
    "table",
    "taken",
    "takes",
    "tales",
    "talks",
    "tanks",
    "tapes",
    "tasks",
    "taste",
    "tasty",
    "taxes",
    "teach",
    "teams",
    "tears",
    "teens",
    "teeth",
    "tells",
    "tempo",
    "tends",
    "tenth",
    "tents",
    "terms",
    "tests",
    "texts",
    "thank",
    "theft",
    "their",
    "theme",
    "there",
    "these",
    "thick",
    "thief",
    "thigh",
    "thing",
    "think",
    "third",
    "those",
    "three",
    "threw",
    "throw",
    "thumb",
    "tiger",
    "tight",
    "tiles",
    "timer",
    "times",
    "tiple",
    "tired",
    "tires",
    "title",
    "toast",
    "today",
    "token",
    "tones",
    "tools",
    "tooth",
    "topic",
    "torch",
    "total",
    "touch",
    "tough",
    "tours",
    "towel",
    "tower",
    "towns",
    "toxic",
    "trace",
    "track",
    "tract",
    "trade",
    "trail",
    "train",
    "trait",
    "trans",
    "traps",
    "trash",
    "treat",
    "trees",
    "trend",
    "trial",
    "tribe",
    "trick",
    "tried",
    "tries",
    "trips",
    "trout",
    "truck",
    "truly",
    "trump",
    "trunk",
    "trust",
    "truth",
    "tubes",
    "tumor",
    "tuned",
    "tunes",
    "turbo",
    "turns",
    "tutor",
    "tweet",
    "twice",
    "twins",
    "twist",
    "types",
    "tyres",
    "ultra",
    "uncle",
    "under",
    "union",
    "unite",
    "units",
    "unity",
    "until",
    "upper",
    "upset",
    "urban",
    "urged",
    "urine",
    "usage",
    "users",
    "using",
    "usual",
    "unsaw",
    "unsay",
    "unsee",
    "unset",
    "unsew",
    "unsub",
    "untag",
    "untax",
    "untie",
    "until",
    "unwed",
    "unwet",
    "unwit",
    "unwon",
    "unzip",
    "upbow",
    "upbye",
    "updos",
    "updry",
    "upend",
    "upjet",
    "uplay",
    "upled",
    "uplit",
    "upped",
    "upper",
    "upran",
    "uprun",
    "upsee",
    "upset",
    "upsey",
    "upter",
    "uptie",
    "uraei",
    "urali",
    "uraos",
    "urare",
    "urari",
    "urase",
    "urate",
    "urban",
    "urbex",
    "urbia",
    "urdee",
    "ureal",
    "ureas",
    "uredo",
    "ureic",
    "ureid",
    "urena",
    "urged",
    "urger",
    "urges",
    "urial",
    "urine",
    "vague",
    "valid",
    "value",
    "valve",
    "vapor",
    "vault",
    "vegan",
    "veins",
    "vents",
    "venue",
    "verse",
    "video",
    "views",
    "villa",
    "vinyl",
    "viral",
    "virus",
    "visas",
    "visit",
    "vital",
    "vivid",
    "vocal",
    "vodka",
    "voice",
    "volts",
    "voted",
    "voter",
    "votes",
    "verbs",
    "verde",
    "verge",
    "verra",
    "verre",
    "verry",
    "versa",
    "verse",
    "verso",
    "verst",
    "verte",
    "verts",
    "vertu",
    "verve",
    "vespa",
    "vesta",
    "vests",
    "vetch",
    "veuve",
    "veves",
    "vexed",
    "vexer",
    "vexes",
    "vexil",
    "vezir",
    "vials",
    "viand",
    "vibed",
    "vibes",
    "vibex",
    "vibey",
    "vicar",
    "vices",
    "vichy",
    "vicus",
    "wages",
    "wagon",
    "waist",
    "walks",
    "walls",
    "wants",
    "warns",
    "waste",
    "watch",
    "water",
    "watts",
    "waves",
    "wears",
    "weeds",
    "weeks",
    "weigh",
    "weird",
    "wells",
    "welsh",
    "whale",
    "wheat",
    "wheel",
    "where",
    "which",
    "while",
    "white",
    "whole",
    "whose",
    "wider",
    "widow",
    "width",
    "winds",
    "wines",
    "wings",
    "wiped",
    "wired",
    "wires",
    "witch",
    "wives",
    "woman",
    "women",
    "woods",
    "words",
    "works",
    "world",
    "worms",
    "worry",
    "worse",
    "worst",
    "worth",
    "would",
    "wound",
    "wrath",
    "wrist",
    "write",
    "wrong",
    "wrote",
    "waacs",
    "wacke",
    "wacko",
    "wacks",
    "wacky",
    "wadds",
    "waddy",
    "waded",
    "wader",
    "wades",
    "wadis",
    "wafer",
    "waffs",
    "wafts",
    "waged",
    "wager",
    "wages",
    "wagga",
    "wagon",
    "wahoo",
    "waide",
    "waifs",
    "wails",
    "wains",
    "wairs",
    "waist",
    "waits",
    "waive",
    "wakas",
    "waked",
    "waken",
    "waker",
    "wakes",
    "wakfs",
    "waldo",
    "walds",
    "waled",
    "waler",
    "wales",
    "walis",
    "walks",
    "walla",
    "walls",
    "wally",
    "walty",
    "waltz",
    "wamed",
    "wames",
    "wamus",
    "wands",
    "wanes",
    "waney",
    "wangs",
    "wanks",
    "wanky",
    "wanle",
    "wanly",
    "wanna",
    "wants",
    "wanty",
    "wanze",
    "waqfs",
    "warbs",
    "xebec",
    "xenia",
    "xenic",
    "xenon",
    "xeric",
    "xerox",
    "xerus",
    "xoana",
    "xrays",
    "xylan",
    "xylem",
    "xylic",
    "xylol",
    "xylyl",
    "xysti",
    "xysts",
    "yacht",
    "yards",
    "years",
    "yeast",
    "yield",
    "young",
    "yours",
    "youth",
    "yummy",
    "yacca",
    "yacht",
    "yacka",
    "yacks",
    "yadda",
    "yadim",
    "yaffs",
    "yager",
    "yagis",
    "yagna",
    "yahoo",
    "yajes",
    "yajna",
    "yakka",
    "yakow",
    "yales",
    "yamen",
    "yampa",
    "yampy",
    "yamun",
    "yandy",
    "yangs",
    "yanks",
    "yapok",
    "yapon",
    "yapps",
    "yappy",
    "yarak",
    "yarco",
    "yards",
    "yarer",
    "yarfa",
    "yarks",
    "yarns",
    "yarra",
    "yarrs",
    "yarta",
    "yarto",
    "yasss",
    "yates",
    "yatra",
    "yauds",
    "yauld",
    "yaups",
    "yawed",
    "yawey",
    "yawls",
    "yawns",
    "zones",
    "zebra",
    "zests",
    "zesty",
    "zetas",
    "zorse",
    "zouks",
    "zowee",
    "zowie",
    "zacks",
    "zaddy",
    "zafus",
    "zaida",
    "zaide",
    "zaidy",
    "zaire",
    "zakah",
    "zakat",
    "zamac",
    "zamak",
    "zaman",
    "zambo",
    "zamia",
    "zamis",
    "zanja",
    "zante",
    "zanza",
    "zanze",
    "zappy",
    "zarda",
    "zarfs",
    "zaris",
    "zatar",
    "zatis",
    "zawns",
    "zaxes",
    "zayde",
    "zerks",
    "zeros",
    "zests",
    "zesty",
    "zetas",
    "zexes",
    "zezes",
    "zhlob",
    "zhlub",
    "zhomo",
    "zhush",
    "zhuzh",
    "zibet",
    "ziffs",
    "zigan",
    "zikrs",
    "zilas",
    "zilch",
    "zilla",
    "zills",
    "zimbi",
    "zimbs",
    "zinco",
    "zincs",
    "zincy",
    "zineb",
    "zines",
    "zings",
    "zingy",
    "zinke",
    "zinky",
    "zinos",
    "zippo",
    "zippy",
    "ziram",
    "zitis",
    "zitti",
    "zitty",
    "zizel",
    "zizit",
    "zlote",
    "zloty",
    "zoaea",
    "zobos",
    "zobus",
    "zocco",
    "zoeae",
    "zoeal"
  ];

  // wordle.js
  var guessElement = document.getElementById("guess");
  var guessLowerCase = "";
  var secretWord = getSecretWord();
  var indexGuess;
  var indexSecret;
  var attempts = 0;
  var submit = document.getElementById("submitbutton");
  var message = document.getElementById("message");
  var newgame = document.getElementById("newgame");
  var endgame = document.getElementById("endgame");
  guessElement.focus();
  function getSecretWord() {
    const urlParams = new URLSearchParams(window.location.search);
    const urlSecret = urlParams.get("secret");
    return urlSecret ? urlSecret : generate({ minLength: 1e4, maxLength: 5 });
  }
  function onKeyUpHandler(event) {
    if (guessElement.value.length === 5) {
      submit.removeAttribute("disabled");
      isGuessValid();
    } else {
      submit.setAttribute("disabled", null);
    }
    if (event.key === "Enter") {
      event.preventDefault();
      submit.click();
    }
  }
  function isGuessValid() {
    guessLowerCase = guessElement.value.toLowerCase();
    if (!fiveLetterWords.includes(guessLowerCase)) {
      console.log("NOT A WORD");
      submit.setAttribute("disabled", null);
    }
  }
  function submitGuess(internalGuess, internalSecretWord) {
    guessLowerCase = guessElement.value.toLowerCase();
    compareGuess(internalSecretWord, internalGuess);
    changeColor();
    attempts++;
    checkSecretWord();
    resetVar();
  }
  function compareGuess(internalSecretWord, internalGuess) {
    const guessList = {};
    for (indexGuess = 0; indexGuess < 5; indexGuess++) {
      const id = attempts.toString() + indexGuess.toString();
      for (indexSecret = 0; indexSecret < internalSecretWord.length; indexSecret++) {
        if (internalGuess[indexGuess] === internalSecretWord[indexSecret] && indexGuess === indexSecret) {
          guessList[id] = "green";
          internalSecretWord = internalSecretWord.substring(0, indexSecret) + "*" + internalSecretWord.substring(indexSecret + 1, indexSecret.lenght);
          internalGuess = internalGuess.substring(0, indexGuess) + "@" + internalGuess.substring(indexGuess + 1, indexGuess.lenght);
        }
      }
    }
    for (indexGuess = 0; indexGuess < 5; indexGuess++) {
      const id = attempts.toString() + indexGuess.toString();
      const boxElement = document.getElementById(id);
      for (indexSecret = 0; indexSecret < internalSecretWord.length; indexSecret++) {
        if (internalGuess[indexGuess] === internalSecretWord[indexSecret] && indexGuess !== indexSecret && boxElement.dataset.color !== "green") {
          guessList[id] = "yellow";
        } else {
          guessList[id] = "grey";
        }
      }
    }
    console.log(guessList);
    return guessList;
  }
  function changeColor() {
    let listColorChange = compareGuess(secretWord, guessLowerCase);
    guessLowerCase = guessElement.value.toUpperCase();
    for (const property in listColorChange) {
      const boxElement = document.getElementById(property);
      let guessIndex = property.slice(1);
      boxElement.dataset.color = listColorChange[property];
      boxElement.innerText = guessLowerCase[guessIndex];
    }
  }
  function resetVar() {
    guessElement.value = "";
    guessElement.focus();
    submit.setAttribute("disabled", null);
  }
  function getRandomWinWord() {
    let winWord = ["Perfect", "Amazing", "Wonderful", "Brilliant"];
    let length = winWord.length;
    let mathRandom = Math.random() * length;
    let mathFloor = Math.floor(mathRandom);
    return winWord[mathFloor];
  }
  function checkSecretWord() {
    if (guessLowerCase === secretWord) {
      guessElement.setAttribute("disabled", null);
      submit.style.visibility = "hidden";
      endgame.style.visibility = "visible";
      message.innerText = `"${getRandomWinWord()}! You win!"`;
    } else if (guessLowerCase !== secretWord && attempts == 6) {
      guessElement.setAttribute("disabled", null);
      submit.style.visibility = "hidden";
      endgame.style.visibility = "visible";
      message.innerText = `"Unlucky! The word is ${secretWord}!"`;
    }
  }
  function newGameReset() {
    for (let row = 0; row < 6; row++) {
      for (let column = 0; column < 5; column++) {
        const idReset = row.toString() + column.toString();
        const boxReset = document.getElementById(idReset);
        boxReset.dataset.color = "white";
        boxReset.innerText = "";
        submit.style.visibility = "visible";
        endgame.style.visibility = "hidden";
      }
    }
    attempts = 0;
    guessElement.disabled = false;
    guessElement.focus();
    secretWord = getSecretWord();
  }
  submit.onclick = () => {
    submitGuess(guessLowerCase, secretWord);
  };
  guessElement.onkeyup = onKeyUpHandler;
  newgame.onclick = newGameReset;
})();
//# sourceMappingURL=main.js.map
